@{
  
    Layout = "_Layout_login";
}

<meta charset="utf-8" />
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" crossorigin="anonymous"></script>
<script src="https://kit.fontawesome.com/9bbb5484f7.js" crossorigin="anonymous"></script>

    <body>
        <!--表單欄-->
    <div class="container" style="margin-top:50px">
        <div class="row justify-content-center align-items-center">
            <div class="col-lg-5 " style="min-width: 500px; max-width: 900px;">
                <div class="card border-0 shadow rounded-3 my-5 ">
                    <div class="card-body p-4 p-sm-5 " style="white-space: nowrap;">
                        <h3>忘記密碼</h3>
                        <p>輸入電子信箱，點選獲取驗證碼，我們會發送驗證信件給您</p>
                        <hr style="border-top: 3px solid #0D6EFD; ">
                        <form >
                            <div class="mb-3">
                                <label for="EmailInput1" class="form-label" style="font-size:15px">電子信箱</label>
                                <input type="email" class="form-control" id="EmailInput1" name="EmailInput" placeholder="電子信箱">
                                <p id="EmailResult" class="resultN form-text text-danger"></p>
                            </div>

                            <button type="button" class="btn btn-primary mt-1 mb-4" id="getOTP">獲取驗證碼</button>
                            <br />

                            <div style="display:none" id="OTPcodeInput">
                                <div class="mb-3">
                                    <label for="otpCode" class="form-label" style="font-size:15px">驗證碼</label>
                                    <input class="form-control" id="otpCode" name="otpCode" placeholder="請輸入驗證碼">
                                </div>
                                <p id="OTPresult" class="form-text text-danger"></p>
                            </div>

                            <div style="display:none" id="resetPwd">
                                <div class="mb-3">
                                    <label for="PasswordInput" class="form-label" style="font-size:15px">密碼</label>
                                    <input type="password" class="form-control" id="PasswordInput" name="Password" placeholder="密碼">
                                    <p id="passwordError" class="form-text text-danger" style="display: none;">請輸入有效的密碼。</p>
                                </div>
                           

                            <div class="mb-3" >
                                <label for="RecheckPasswordInput" class="form-label" style="font-size:15px">確認密碼</label>
                                <input type="password" class="form-control" id="RecheckPasswordInput" placeholder="確認密碼">
                                <p id="recheckpasswordError" class="form-text text-danger" style="display: none;">該欄位不得為空白</p>
                                <p id="passwordMismatchError" class="form-text text-danger" style="display: none;">兩次密碼輸入不同，請再次確認</p>
                            </div>
                           
                            <button type="button" class="btn btn-primary mt-1 mb-4" id="confirmBtn">送出重設密碼</button>
                            </div>
                        </form>
                        <i class="fa-solid fa-rotate-left" style="color: #74C0FC;"></i><a href="/Member/Login/">返回登入頁面</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</body>


@section Styles
{
    <style>
        body {
            background: #F9F9F9;
            /*background: linear-gradient(to right, #0062E6, #33AEFF);*/
        }


        a {
            text-decoration: none;
        }

            a:hover {
                color: #87b3fb;
                text-decoration: underline;
            }

       
        h3 {
            font-weight: 800;
        }

        .ff1 {
            font-size: 14px;
            margin: 0 70px 0 0;
            padding-left: 0;
        }



    </style>
}
       
 @section Scripts
{

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <script>
        const emailInput = document.getElementById("EmailInput1");
        const resultElement = document.getElementById("EmailResult");
        const getOTPButton = document.getElementById("getOTP");


       // 在Email欄位輸入時的動作
        emailInput.addEventListener("input", async function () 
        {
            const email = emailInput.value;
            resultElement.innerText = "";
            emailInput.classList.remove("border", "border-danger");

            if (email === "") 
            {
                getOTPButton.disabled = true; 
                return;
            }

            try {
                const response = await fetch("https://localhost:7103/api/Members/query", {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ email: email })
                });
                const data = await response.json();
                if (data.message === "NO") {
                    resultElement.innerText = "Oops！這個 Email 沒有註冊過欸，請點選「我是新朋友」加入我們!";
                    emailInput.classList.add("border", "border-danger");
                    getOTPButton.disabled = true;
                } else if (data.message === "YES") 
                {
                    getOTPButton.disabled = false;
                    emailInput.classList.remove("border", "border-danger");
                    resultElement.innerText = "";
                }
            } catch (error) {
                console.error('Error:', error);
            }
        });

     
        // 按下獲取驗證碼的鈕的動作
        getOTPButton.addEventListener("click", async function (event) {
            event.preventDefault();

            const email = emailInput.value;
            const otpCodeInput = document.getElementById("OTPcodeInput");

            // 先檢查Email欄位是不是空的
            if (email === "") {
                resultElement.innerText = "電子信箱欄位必須填寫";
                emailInput.classList.add("border", "border-danger");
                return;
            } 
            try {
                    const url = 'https://localhost:7103/api/OTPEmail/send-otp';
                    const response = await fetch(url, {
                        method: 'POST',
                        body: JSON.stringify({ email: email }),
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    });

                    if (response.ok) 
                    {
                        alert('重設密碼驗證信已寄至您的信箱，請至信箱查收～ ps若沒收到請檢查垃圾郵件！');
                        document.getElementById("OTPcodeInput").style.display = "block"; //顯示可以輸入驗證碼的欄位

                        // 檢查驗證碼輸入框是否為空,如果不是空的則先清空，以免爆錯
                        if (otpCodeInput.value !== "") {
                            otpCodeInput.value = "";
                        }

                        // 禁用按鈕並啟動倒數計時
                        getOTPButton.disabled = true;
                        let countdown = 30;
                        getOTPButton.innerText = `獲取驗證碼 (倒數${countdown}秒)`;

                        // 倒數計時的函數
                        const countdownInterval = setInterval(() => {
                            countdown--;
                            getOTPButton.innerText = `獲取驗證碼 (倒數${countdown}秒)`;

                            if (countdown === 0) {
                                clearInterval(countdownInterval);
                                getOTPButton.disabled = false;
                                getOTPButton.innerText = "獲取驗證碼";
                            }
                        }, 1000);
                    }
                    else 
                    {
                        alert('驗證信發送失敗，請洽客服人員'); //當驗證碼過期後，再次發送驗證信，會出這個錯
                    }
                } 
                catch (error) 
                {
                    console.error('Error:', error);
                    alert("錯誤發生，請再試一次!");
                }
            
        });
        
        //在輸入OTP驗證碼時的動作，即時比對OTP碼的狀態或對錯
        document.getElementById("otpCode").addEventListener("input", async function () {
            const emailInput = document.getElementById("EmailInput1").value;
            const otpCode = document.getElementById("otpCode").value;

            try {
                const response = await fetch("https://localhost:7103/api/OTPEmail/verify-otp", {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ email: emailInput, otpCode: otpCode })
                });

                if (response.ok) 
                {
                    document.getElementById("resetPwd").style.display = "block"; //出現可以重新設定密碼的欄位
                    document.getElementById("OTPresult").innerText = "驗證成功!";
                    document.getElementById("getOTP").disabled = true; // 停用"獲取驗證碼"按鈕

                } else 
                {
                    const data = await response.json();
                    if (data.message === "OTP expired") 
                    {
                        document.getElementById("OTPresult").innerHTML = "驗證碼已過期，請重新點選「獲取驗證碼」按鈕，</br>我們將再次寄出驗證信件至您的信箱";
                        document.getElementById("getOTP").disabled = false; // 啟用"獲取驗證碼"按鈕 
                    } 
                    else if (data.message === "OTP null") 
                    {
                        document.getElementById("OTPresult").innerText = "驗證碼不符!請再確認後重新輸入";
                    }
                }
            } catch (error) {
                console.error('Error:', error);
                document.getElementById("OTPresult").innerText = "錯誤發生，請再試一次!";
            }
        });
    

   
        //【密碼欄位驗證】
        document.getElementById("PasswordInput").addEventListener("blur", function () {
            var input = this.value.trim();
            var error = document.getElementById("passwordError");
            var passwordPattern = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@@$!%*?&])[A-Za-z\d@@$!%*?&]{6,}$/;

            if (input === "") {
                error.textContent = "密碼欄位不得為空白";
                error.style.display = "block";
                this.classList.add("border", "border-danger");
            } else if (!passwordPattern.test(input)) {
                error.textContent = "密碼至少6個字元，且需包含大小寫英文字母、數字、特殊符號";
                error.style.display = "block";
                this.classList.add("border", "border-danger");
            } else {
                error.style.display = "none";
                this.classList.remove("border", "border-danger");
            }

        });


        //【確認密碼欄位驗證】
        document.getElementById("RecheckPasswordInput").addEventListener("blur", function () {
            var passwordInput = document.getElementById("PasswordInput").value.trim();
            var recheckPasswordInput = this.value.trim();
            var recheckPasswordError = document.getElementById("recheckpasswordError");
            var passwordMismatchError = document.getElementById("passwordMismatchError");

            if (recheckPasswordInput === "") {
                recheckPasswordError.style.display = "block";
                passwordMismatchError.style.display = "none";
                this.classList.add("border", "border-danger");
            } else {
                recheckPasswordError.style.display = "none";
                this.classList.remove("border", "border-danger");

                if (recheckPasswordInput !== passwordInput) {
                    passwordMismatchError.style.display = "block";
                    this.classList.add("border", "border-danger");
                } else {
                    passwordMismatchError.style.display = "none";
                    this.classList.remove("border", "border-danger");
                }
            }

        });

        //按下確認密碼修改鈕的動作
        const confirmButton = document.getElementById("confirmBtn");
       
        confirmButton.addEventListener("click", async function (event) {
            event.preventDefault();

            const newPassword = document.getElementById("PasswordInput").value.trim();
            const emailInput = document.getElementById("EmailInput1").value;

            // 檢查是不是有紅框錯誤
            const redBorderElements = document.querySelectorAll('.border-danger');
            if (redBorderElements.length > 0) {
                alert('有紅框處尚未修改，請再次確認');
                return;
            }

            try {
                // 根據輸入Email找到該會員的MemberID
                const response = await fetch("https://localhost:7103/api/Members/returnID", {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ email: emailInput})
   
                });

                if (!response.ok) 
                {
                    throw new Error('找不到該會員');
                }

                const member = await response.json();
                console.log(member);

                const memberId = member.memberId;
                console.log(memberId);
                

                // 串接API，僅修改該會員的密碼
                const updateResponse = await fetch(`https://localhost:7103/api/OTPEmail/${memberId}`, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ Password: newPassword })
                });

                if (updateResponse.ok) 
                {
                    alert('密碼修改成功');
                    // 跳轉至登入頁面
                    window.location.href = '/Member/login';
                } else 
                {
                    const errorText = await updateResponse.text();
                    console.error('更新密碼失敗:', errorText);
                    alert('密碼修改失敗，請稍後再試');
                }
            } catch (error) 
            {
                console.error('發生錯誤:', error);
                alert(`發生錯誤，請稍後再試。錯誤信息: ${error.message}`);;
            }
        });


    </script>

}




