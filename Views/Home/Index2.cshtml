@{
    ViewData["Title"] = "Home Page2";
    Layout = "_Layout_index2";
}

<br />
<!--================ 台灣熱門城市 Area  =================-->
<section class="accomodation_area section_gap">

    <br /><br /><br /><br />


    <div class="container">
        <div class="row mb_30">
            <div class="col-lg-3 col-sm-6" ">
            @* //畫面靠左 3/12 位置 *@
                <div class=">
                    <a class="book_now_btn button_hover" href="#">
                        <img src="~/image/ming_img/map.png" alt="">
                    </a> 
                </div>

                <div>
                    <a class="book_now_btn button_hover" href="#" style="border-radius: 20px;background: #F0F0F0; text-align:left">
                        <img src="~/image/ming_img/search.png" alt="">搜尋關鍵字
                    </a>
                </div>
                <br />
                <p style="margin:0px 10px">每晚預算</p>

                <!--//價格搜尋拉霸start-->
                <div class="slider-container" style="margin: 10px">
                    <div class="range-slider" id="rangeSlider" min="1" max="10000">
                        <div class="slider-handle lower-handle" id="lowerHandle"></div>
                        <div class="slider-handle upper-handle" id="upperHandle"></div>
                    </div>
                    <div class="label-container">
                        <span id="lowerLabel">下限：1</span>
                        <span id="upperLabel">上限：10000</span>
                    </div>
                    <div class="input-container">
                        <input type="number" id="lowerInput" value="1" style="margin-right: 10px;" class="no-spinner">
                        <input type="number" id="upperInput" value="10000" class="no-spinner">
                    </div>
                </div>
                <!--//價格搜尋拉霸end-->
                <br />
                <br />


                <div style="margin:20px 10px" class="form-check-container-hotel-type">
                    <p>住宿類型</p>
                @foreach (var hotelType in Model.HotelTypes)
                {
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" value="@hotelType.HotelTypeId" id="hotelType_@hotelType.HotelTypeId">
                            <label class="form-check-label" for="hotelType_@hotelType.HotelTypeId">
                            @hotelType.HotelTypeName
                            </label>
                        </div>
                }
                </div>

                <div style="margin:20px 10px" class="form-check-container-hotel-equipment">
                    <p>住宿設備</p>
                @foreach (var hotelEquipment in Model.HotelEquipments)
                {
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" value="@hotelEquipment.HotelEquipmentId" id="hotelEquipment_@hotelEquipment.HotelEquipmentId">
                            <label class="form-check-label" for="hotelEquipment_@hotelEquipment.HotelEquipmentId">
                            @hotelEquipment.HotelEquipmentName
                            </label>
                        </div>
                }
                </div>

                <div style="margin:20px 10px" class="form-check-container-city">
                    <p>城市</p>
                    <div class="form-check-container">
                    @foreach (var city in Model.Cities)
                    {
                            <div class="form-check city-item">
                                <input class="form-check-input" type="checkbox" value="@city.CityId" id="city_@city.CityId">
                                <label class="form-check-label" for="city_@city.CityId">
                                @city.CityName
                                </label>
                            </div>
                    }
                    </div>
                    <button id="toggleCityButton" class="toggle-button">顯示更多</button>
                </div>

                <div style="margin:20px 10px" class="form-check-container-room-equipment">
                    <p>房間設備</p>
                @foreach (var roomEquipment in Model.RoomEquipments)
                {
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" value="@roomEquipment.RoomEquipmentId" id="roomEquipment_@roomEquipment.RoomEquipmentId">
                            <label class="form-check-label" for="roomEquipment_@roomEquipment.RoomEquipmentId">
                            @roomEquipment.RoomEquipmentName
                            </label>
                        </div>
                }
                </div>
            </div>


            <div class="col-lg-9 col-sm-12">
            <div class="navbar">
    <button id="sortBtn">排序</button>
    <button id="bestMatchBtn">最匹配選項</button>
    <button id="highestRatedBtn">住客評鑑最高</button>
    <button id="lowestPriceBtn">最低價格優先</button>
    <button id="nearbyBtn">鄰近交通&景點</button>
    <button id="hotDealBtn" class="special-button">搶手特惠!</button>
</div>
            @* //畫面靠右 9/12 位置 *@
                <div class="container">
                    <div class="row">
                        <div class="col-lg-12" style="border:1px solid gray">
                            <div class="container">
                                <div class="row" id="showhotels">
                                @* //動態生成旅館 *@
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>
</section>
<!--================ 台灣熱門城市 Area  =================-->
@section Scripts {

    
    <script>
        //這是函式1
        // 定義 fetchHotels 函式
        async function fetchHotels(searchHotel) {
            const url = "https://localhost:7103/api/HotelSearch/indexsearch";
            const response = await fetch(url, {
                method: "POST",
                body: JSON.stringify(searchHotel),
                headers: {
                    "Content-Type": "application/json",
                },
            });

            const data = await response.json();
            console.log(data);

            const divHotels = document.querySelector("#showhotels");
            // 清空舊結果
            divHotels.innerHTML = "";

            const hotels = data.map((hotel) => {
                const {
                    hotelName,
                    hotelAddress,
                    hotelPhone,
                    hotelDescription,
                    countryName,
                    hotelEquipmentName,
                    hotelImage,
                    levelStar,
                    hotelMaximumOccupancy,
                    hotelPrice,
                } = hotel;
                return `
                        <div class="col-lg-4 col-sm-8" style="padding:0px">
                            <table>
                                <tr>
                                    <td colspan="3"><img src='https://localhost:7284/image/${hotelImage}' class="img-fluid" style="width:100%" /></td>
                                </tr>
                                <tr>
                                    <td><img src="/image/ming_img/room1.jpg" class="img-fluid" /></td>
                                    <td><img src="/image/ming_img/room3.jpg" class="img-fluid" /></td>
                                    <td><img src="/image/ming_img/room4.jpg" class="img-fluid" /></td>
                                </tr>
                            </table>
                        </div>
                        <div class="col-lg-5 col-sm-10" style="border:1px solid gray">
                            <h3>${hotelName}</h3>
                            <span>${levelStar}星級飯店 </span><span style="color:blue">${hotelAddress}</span>
                            <h6>此住宿提供:</h6>
                            <h5 style="border: 1px solid black;display: inline-block;">${hotelEquipmentName}</h5>
                            <br>
                            <h5 style="border: 1px solid black;display: inline-block;">設施2</h5>
                            <br>
                            <h5 style="border: 1px solid black;display: inline-block;">設施3</h5>
                            <br>
                            <h6 style="color:green">${levelStar}星級飯店最優價</h6>
                            <h6 style="color:red">昨天起已收到${levelStar}張訂單</h6>
                        </div>
                        <div class="col-lg-3 col-sm-12" style="border:1px solid gray;text-align: right">
                            <h5>很出色</h5>
                            <h6 style="color:gray"> 個評分</h6>
                            <br>
                            <h6 style="border: 1px solid red;display:inline-block;background-color: red;color:white">優惠只剩1間</h6>
                            <h6 style="color:gray">每晚價格(不連税及其他费用)</h6>
                            <br><br>
                            <h3>NT$${hotelPrice}</h3>
                        </div>
                    `;
            });

            divHotels.innerHTML = hotels.join("");
        }

        // 定義更新酒店的函式
        async function updateHotels(lowerPrice, upperPrice) {
            // 確保 fetchHotels 函式可用
            if (typeof fetchHotels === 'function') {
                const searchHotelJson = sessionStorage.getItem('searchHotel');
                if (searchHotelJson) {
                    const searchHotel = JSON.parse(searchHotelJson);
                    searchHotel.lowerPrice = lowerPrice;
                    searchHotel.upperPrice = upperPrice;

                    // 更新 sessionStorage
                    sessionStorage.setItem('searchHotel', JSON.stringify(searchHotel));

                    // 調用 fetchHotels 函式
                    await fetchHotels(searchHotel);
                } else {
                    console.log('searchHotel not found in sessionStorage');
                }
            } else {
                console.log('fetchHotels is not defined');
            }
        }

        document.addEventListener("DOMContentLoaded", function () {
            // 初始化時從 sessionStorage 加載搜索結果
            (async () => {
                const searchHotelJson = sessionStorage.getItem("searchHotel");
                if (searchHotelJson) {
                    const searchHotel = JSON.parse(searchHotelJson);
                    console.log(searchHotel);
                    await fetchHotels(searchHotel);
                } else {
                    console.log("searchHotel not found in sessionStorage");
                }
            })();

            // 按鈕事件處理
            const btnSubmit3 = document.querySelector("#buttonSubmit3");
            btnSubmit3.addEventListener("click", async (event) => {
                const inputkeyword3 = document.querySelector("#search-input3").value;
                const inputDatestart3 = document.querySelector("#myDatepickerstart3").value;
                const inputDateend3 = document.querySelector("#myDatepickerend3").value;
                const inputadults3 = parseInt(document.querySelector("#adults3").value);
                const inputrooms3 = parseInt(document.querySelector("#rooms3").value);
                const inputchildren3 = 0;
                const lowerPrice = parseInt(document.querySelector("#lowerInput").value);
                const upperPrice = parseInt(document.querySelector("#upperInput").value);

                // 創建搜索酒店對象
                const searchHotel = {
                    keyword: inputkeyword3,
                    checkInDate: inputDatestart3,
                    checkOutDate: inputDateend3,
                    roomnum: inputrooms3,
                    adults: inputadults3,
                    children: inputchildren3,
                    sortBy: null, // 初始化排序字段
                    sortType: null, // 初始化排序類型
                    lowerPrice: lowerPrice,
                    upperPrice: upperPrice,
                };

                // 清除 sessionStorage 中的 searchHotel 資訊
                sessionStorage.removeItem("searchHotel");

                // 更新 sessionStorage
                sessionStorage.setItem("searchHotel", JSON.stringify(searchHotel));

                // 發送請求並渲染結果
                await fetchHotels(searchHotel);
            });

            // 定義按鈕事件處理函數
            const sortBtn = document.querySelector("#sortBtn");
            const bestMatchBtn = document.querySelector("#bestMatchBtn");
            const highestRatedBtn = document.querySelector("#highestRatedBtn");
            const lowestPriceBtn = document.querySelector("#lowestPriceBtn");
            const nearbyBtn = document.querySelector("#nearbyBtn");
            const hotDealBtn = document.querySelector("#hotDealBtn");

            sortBtn.addEventListener("click", () => handleSort("HotelId", "asc"));
            bestMatchBtn.addEventListener("click", () =>
                handleSort("LevelStar", "desc")
            );
            highestRatedBtn.addEventListener("click", () =>
                handleSort("LevelStar", "desc")
            );
            lowestPriceBtn.addEventListener("click", () =>
                handleSort("HotelPrice", "asc")
            );
            nearbyBtn.addEventListener("click", () => handleSort("CityName", "asc"));
            hotDealBtn.addEventListener("click", () => handleSort("deal", "desc"));

            // 處理排序邏輯的函數
            async function handleSort(sortBy, sortType) {
                const searchHotelJson = sessionStorage.getItem('searchHotel');
                if (searchHotelJson) {
                    const searchHotel = JSON.parse(searchHotelJson);
                    searchHotel.sortBy = sortBy;
                    searchHotel.sortType = sortType;

                    // 更新 sessionStorage
                    sessionStorage.setItem('searchHotel', JSON.stringify(searchHotel));

                    // 發送請求並渲染結果
                    await fetchHotels(searchHotel);
                } else {
                    console.log('searchHotel not found in sessionStorage');
                }
            }
        });

        // 定義範圍滑桿腳本
        const lowerHandle = document.getElementById('lowerHandle');
        const upperHandle = document.getElementById('upperHandle');
        const rangeSlider = document.getElementById('rangeSlider');
        const lowerLabel = document.getElementById('lowerLabel');
        const upperLabel = document.getElementById('upperLabel');
        const lowerInput = document.getElementById('lowerInput');
        const upperInput = document.getElementById('upperInput');

        lowerHandle.addEventListener('mousedown', startDrag);
        upperHandle.addEventListener('mousedown', startDrag);

        let isDragging = false;
        let currentHandle = null;

        function startDrag(event) {
            isDragging = true;
            currentHandle = event.target;
            document.addEventListener('mousemove', handleDrag);
            document.addEventListener('mouseup', stopDrag);
        }

        function handleDrag(event) {
            if (!isDragging) return;

            if (currentHandle === lowerHandle) {
                handleDragLogic(event, lowerHandle, lowerLabel, upperLabel, lowerInput, upperInput);
            } else {
                handleDragLogic(event, upperHandle, upperLabel, lowerLabel, lowerInput, upperInput);
            }
        }

        function handleDragLogic(event, handle, label, oppositeLabel, lowerInput, upperInput) {
            const sliderRect = rangeSlider.getBoundingClientRect();
            const sliderWidth = sliderRect.width;
            const min = parseFloat(rangeSlider.getAttribute('min'));
            const max = parseFloat(rangeSlider.getAttribute('max'));
            const range = max - min;

            let position = (event.clientX - sliderRect.left) / sliderWidth;
            position = Math.min(1, Math.max(0, position)); // Clamp position between 0 and 1
            const value = Math.round(min + position * range);

            if (handle === lowerHandle) {
                if (value >= parseFloat(oppositeLabel.textContent.split('：')[1])) {
                    return; // Lower handle cannot exceed upper handle
                }
                handle.style.left = `${position * 100}%`;
                label.textContent = `下限：${value}`;
                lowerInput.value = value;
                updateHotels(value, parseFloat(upperInput.value));
            } else {
                if (value <= parseFloat(oppositeLabel.textContent.split('：')[1])) {
                    return; // Upper handle cannot be less than lower handle
                }
                handle.style.left = `${position * 100}%`;
                label.textContent = `上限：${value}`;
                upperInput.value = value;
                updateHotels(parseFloat(lowerInput.value), value);
            }
        }

        function stopDrag() {
            isDragging = false;
            currentHandle = null;
            document.removeEventListener('mousemove', handleDrag);
            document.removeEventListener('mouseup', stopDrag);
        }

        // 定義更新酒店的函式
        async function updateHotels(lowerPrice, upperPrice) {
            // 確保 fetchHotels 函式可用
            if (typeof fetchHotels === 'function') {
                const searchHotelJson = sessionStorage.getItem('searchHotel');
                if (searchHotelJson) {
                    const searchHotel = JSON.parse(searchHotelJson);
                    searchHotel.lowerPrice = lowerPrice;
                    searchHotel.upperPrice = upperPrice;

                    // 更新 sessionStorage
                    sessionStorage.setItem('searchHotel', JSON.stringify(searchHotel));

                    // 調用 fetchHotels 函式
                    await fetchHotels(searchHotel);
                } else {
                    console.log('searchHotel not found in sessionStorage');
                }
            } else {
                console.log('fetchHotels is not defined');
            }
        }

    </script>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const toggleButton = document.querySelector("#toggleCityButton");
            const formCheckContainer = document.querySelector(".form-check-container");

            toggleButton.addEventListener("click", function () {
                formCheckContainer.classList.toggle("expanded");
                if (formCheckContainer.classList.contains("expanded")) {
                    toggleButton.textContent = "顯示較少";
                } else {
                    toggleButton.textContent = "顯示更多";
                }
            });
        });
    </script>

    <script>
         //這是函式2
        function getSelectedCheckboxes(containerSelector) {
            const checkboxes = document.querySelectorAll(`${containerSelector} input[type="checkbox"]:checked`);
            return Array.from(checkboxes).map(checkbox => checkbox.value);
        }
        async function updateSearchFilters() {
            const searchHotelJson = sessionStorage.getItem('searchHotel');
            if (searchHotelJson) {
                const searchHotel = JSON.parse(searchHotelJson);
                searchHotel.hotelTypes = getSelectedCheckboxes('.form-check-container-hotel-type');
                searchHotel.hotelEquipments = getSelectedCheckboxes('.form-check-container-hotel-equipment');
                searchHotel.cities = getSelectedCheckboxes('.form-check-container-city');
                searchHotel.roomEquipments = getSelectedCheckboxes('.form-check-container-room-equipment');

                searchHotel.lowerPrice = parseFloat(document.querySelector("#lowerInput").value);
                searchHotel.upperPrice = parseFloat(document.querySelector("#upperInput").value);

                sessionStorage.setItem('searchHotel', JSON.stringify(searchHotel));

                await fetchHotels(searchHotel);
            } else {
                console.log('searchHotel not found in sessionStorage');
            }
        }

        document.addEventListener("DOMContentLoaded", function () {
            const lowerHandle = document.getElementById('lowerHandle');
            const upperHandle = document.getElementById('upperHandle');
            const rangeSlider = document.getElementById('rangeSlider');
            const lowerLabel = document.getElementById('lowerLabel');
            const upperLabel = document.getElementById('upperLabel');
            const lowerInput = document.getElementById('lowerInput');
            const upperInput = document.getElementById('upperInput');

            lowerHandle.addEventListener('mousedown', startDrag);
            upperHandle.addEventListener('mousedown', startDrag);

            let isDragging = false;
            let currentHandle = null;

            function startDrag(event) {
                isDragging = true;
                currentHandle = event.target;
                document.addEventListener('mousemove', handleDrag);
                document.addEventListener('mouseup', stopDrag);
            }

            function handleDrag(event) {
                if (!isDragging) return;

                if (currentHandle === lowerHandle) {
                    handleDragLogic(event, lowerHandle, lowerLabel, upperLabel, lowerInput, upperInput);
                } else {
                    handleDragLogic(event, upperHandle, upperLabel, lowerLabel, lowerInput, upperInput);
                }
            }

            function handleDragLogic(event, handle, label, oppositeLabel, lowerInput, upperInput) {
                const sliderRect = rangeSlider.getBoundingClientRect();
                const sliderWidth = sliderRect.width;
                const min = parseFloat(rangeSlider.getAttribute('min'));
                const max = parseFloat(rangeSlider.getAttribute('max'));
                const range = max - min;

                let position = (event.clientX - sliderRect.left) / sliderWidth;
                position = Math.min(1, Math.max(0, position));
                const value = Math.round(min + position * range);

                if (handle === lowerHandle) {
                    if (value >= parseFloat(oppositeLabel.textContent.split('：')[1])) {
                        return;
                    }
                    handle.style.left = `${position * 100}%`;
                    label.textContent = `下限：${value}`;
                    lowerInput.value = value;
                } else {
                    if (value <= parseFloat(oppositeLabel.textContent.split('：')[1])) {
                        return;
                    }
                    handle.style.left = `${position * 100}%`;
                    label.textContent = `上限：${value}`;
                    upperInput.value = value;
                }

                // 更新搜索條件
                updateSearchFilters();
            }

            function stopDrag() {
                isDragging = false;
                currentHandle = null;
                document.removeEventListener('mousemove', handleDrag);
                document.removeEventListener('mouseup', stopDrag);
            }
        });
        document.querySelectorAll('.form-check-container-hotel-type input[type="checkbox"]').forEach(checkbox => {
            checkbox.addEventListener('change', updateSearchFilters);
        });

        document.querySelectorAll('.form-check-container-hotel-equipment input[type="checkbox"]').forEach(checkbox => {
            checkbox.addEventListener('change', updateSearchFilters);
        });

        document.querySelectorAll('.form-check-container-city input[type="checkbox"]').forEach(checkbox => {
            checkbox.addEventListener('change', updateSearchFilters);
        });

        document.querySelectorAll('.form-check-container-room-equipment input[type="checkbox"]').forEach(checkbox => {
            checkbox.addEventListener('change', updateSearchFilters);
        });
        async function fetchHotels(searchHotel) {
            const url = "https://localhost:7103/api/HotelSearch/advancedsearch";
            const response = await fetch(url, {
                method: "POST",
                body: JSON.stringify(searchHotel),
                headers: {
                    "Content-Type": "application/json",
                },
            });

            if (!response.ok) {
                console.error("Failed to fetch hotels:", response.statusText);
                return;
            }

            const data = await response.json();
            console.log(data);

            const divHotels = document.querySelector("#showhotels");
            divHotels.innerHTML = "";

            const hotels = data.map((hotel) => {
                const {
                    hotelName,
                    hotelAddress,
                    hotelPhone,
                    hotelDescription,
                    countryName,
                    hotelEquipmentName,
                    hotelImage,
                    levelStar,
                    hotelMaximumOccupancy,
                    hotelPrice,
                } = hotel;
                // 動態生成旅館，包裹在.hotel-card裡面
                return `
                <div class="col-lg-12 hotel-card">
                    <div class="row">
                        <div class="col-lg-4 col-sm-8" style="padding:0px">
                            <table>
                                <tr>
                                    <td colspan="3"><img src='https://localhost:7284/image/${hotelImage}' class="img-fluid" style="width:100%" /></td>
                                </tr>
                                <tr>
                                    <td><img src="/image/ming_img/room1.jpg" class="img-fluid" /></td>
                                    <td><img src="/image/ming_img/room3.jpg" class="img-fluid" /></td>
                                    <td><img src="/image/ming_img/room4.jpg" class="img-fluid" /></td>
                                </tr>
                            </table>
                        </div>
                        <div class="col-lg-5 col-sm-10 hotel-details">
                            <h3>${hotelName}</h3>
                            <span>${levelStar}星級飯店 </span><span style="color:blue">${hotelAddress}</span>
                            <h6>此住宿提供:</h6>
                            <h5 style="border: 1px solid black;display: inline-block;">${hotelEquipmentName}</h5>
                            <br>
                            <h5 style="border: 1px solid black;display: inline-block;">設施2</h5>
                            <br>
                            <h5 style="border: 1px solid black;display: inline-block;">設施3</h5>
                            <br>
                            <h6 style="color:green">${levelStar}星級飯店最優價</h6>
                            <h6 style="color:red">昨天起已收到${levelStar}張訂單</h6>
                        </div>
                        <div class="col-lg-3 col-sm-12 hotel-pricing">
                            <h5>很出色</h5>
                            <h6 style="color:gray"> 個評分</h6>
                            <br>
                            <h6 style="border: 1px solid red;display:inline-block;background-color: red;color:white">優惠只剩1間</h6>
                            <h6 style="color:gray">每晚價格(不連税及其他费用)</h6>
                            <br><br>
                            <h3>NT$${hotelPrice}</h3>
                        </div>
                    </div>
                </div>
            `;
            });

            divHotels.innerHTML = hotels.join("");
        }


    </script>


}

@section Styles {
    <style>
        .slider-container {
            display: flex;
            flex-direction: column;
        }

        .range-slider {
            position: absolute;
            width: 83%;
            height: 6px;
            background: #ddd;
            border-radius: 3px;
        }

        .slider-handle {
            position: absolute;
            width: 20px;
            height: 20px;
            background: #007bff;
            border-radius: 50%;
            cursor: pointer;
            top: -7px;
            z-index: 10;
        }

        .label-container {
            display: flex;
            justify-content: space-between;
            margin-top: 15px;
        }

        .input-container {
            display: flex;
            justify-content: space-between;
        }

            .input-container input {
                width: 45%;
                z-index: 1;
            }

    </style>
    <style>
        .navbar {
            display: flex;
            border: 1px solid #ddd;
            padding: 10px;
            background-color: #f9f9f9;
            border-radius: 8px;
        }

            .navbar button {
                margin: 0 5px;
                padding: 10px 15px;
                border: 1px solid #ccc;
                background-color: #fff;
                cursor: pointer;
            }

                .navbar button:hover {
                    background-color: #f1f1f1;
                }

            .navbar .special-button {
                background-color: #4285f4;
                color: white;
                border: none;
            }

                .navbar .special-button:hover {
                    background-color: #357ae8;
                }
        /* 移除 input 上下箭頭 */
        .no-spinner::-webkit-outer-spin-button,
        .no-spinner::-webkit-inner-spin-button {
            -webkit-appearance: none;
            margin: 0;
        }

    </style>
    <style>
        .form-check-container .city-item {
            display: none;
        }

            .form-check-container .city-item:nth-child(-n+10) {
                display: block;
            }

        .form-check-container.expanded .city-item {
            display: block;
        }

        .toggle-button {
            margin-top: 10px;
            padding: 5px 10px;
            background-color: #007bff;
            color: white;
            border: none;
            cursor: pointer;
            border-radius: 5px;
        }
    </style>
    <style>
        /* 點擊旅館的效果 */
        .hotel-card {
            margin: 20px 0; /* 添加間距 */
            box-shadow: 0 4px 8px rgba(0,0,0,0.1);
            border-radius: 5px;
            overflow: hidden;
            background-color: #fff; /* 設置初始背景為白色 */
            transition: box-shadow 0.3s ease, background-color 0.3s ease; /* 添加過渡效果 */
            display: flex; /* 使用 flex 布局 */
        }

        .hotel-card:hover {
            box-shadow: 0 8px 16px rgba(0,0,0,0.2); /* 滑鼠滑過時增加陰影 */
        }

            .hotel-card:hover .hotel-details, .hotel-card:hover .hotel-pricing {
                background-color: #f0f8ff; /* 滑鼠滑過時變為淺藍色 */
            }

        .hotel-card img {
            width: 100%;
            height: auto;
        }

        .hotel-card h3 {
            margin-top: 10px;
        }

        .hotel-details {
            border: 1px solid gray;
            background-color: #fff; /* 初始背景為白色 */
            padding: 10px; /* 增加內邊距 */
            flex: 2; /* 設置 flex 屬性 */
            transition: background-color 0.3s ease; /* 添加過渡效果 */
        }

        .hotel-pricing {
            border: 1px solid gray;
            border-left: none; /* 移除左邊框 */
            text-align: right;
            background-color: #fff; /* 初始背景為白色 */
            padding: 10px; /* 增加內邊距 */
            flex: 1; /* 設置 flex 屬性 */
            transition: background-color 0.3s ease; /* 添加過渡效果 */
        }

        .hotel-info {
            display: flex; /* 使用 flex 布局 */
            width: 100%;
        }
    </style>
}


