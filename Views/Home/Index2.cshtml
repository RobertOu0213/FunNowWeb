@{
    ViewData["Title"] = "Home Page2";
    Layout = "_Layout_index2";
}

<br />
<!--================ 台灣熱門城市 Area  =================-->
<section class="accomodation_area section_gap">
    <br /><br /><br /><br />
    <div class="container">
        <div class="row mb_30">
            <div class="col-lg-3 col-sm-6">
                <!-- 左側篩選條件區域 -->
                <div>
                    <a class="book_now_btn button_hover" href="#">
                        <img src="~/image/ming_img/map.png" alt="">
                    </a>
                </div>

                <div>
                    <input type="text" id="search-input4" class="form-control" placeholder="搜尋關鍵字" onkeydown="handleKeyDownIndex2(event)">
                </div>
                <br />
                <p style="margin:0px 10px">每晚預算</p>

                <!--//價格搜尋拉霸start-->
                <div class="slider-container" style="margin: 10px">
                    <div class="range-slider" id="rangeSlider" min="1" max="10000">
                        <div class="slider-handle lower-handle" id="lowerHandle"></div>
                        <div class="slider-handle upper-handle" id="upperHandle"></div>
                    </div>
                    <div class="label-container">
                        <span id="lowerLabel">下限：1</span>
                        <span id="upperLabel">上限：10000</span>
                    </div>
                    <div class="input-container">
                        <input type="number" id="lowerInput" value="1" style="margin-right: 10px;" class="no-spinner">
                        <input type="number" id="upperInput" value="10000" class="no-spinner">
                    </div>
                </div>
                <!--//價格搜尋拉霸end-->

                <!-- 住宿類型 -->
                <div style="margin:20px 10px" class="form-check-container-hotel-type">
                    <p>住宿類型</p>
                    @foreach (var hotelType in Model.HotelTypes)
                    {
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" value="@hotelType.HotelTypeId" id="hotelType_@hotelType.HotelTypeId">
                            <label class="form-check-label" for="hotelType_@hotelType.HotelTypeId">
                                @hotelType.HotelTypeName
                            </label>
                        </div>
                    }
                </div>

                <!-- 住宿設備 -->
                <div style="margin:20px 10px" class="form-check-container-hotel-equipment">
                    <p>住宿設備</p>
                    @foreach (var hotelEquipment in Model.HotelEquipments)
                    {
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" value="@hotelEquipment.HotelEquipmentId" id="hotelEquipment_@hotelEquipment.HotelEquipmentId">
                            <label class="form-check-label" for="hotelEquipment_@hotelEquipment.HotelEquipmentId">
                                @hotelEquipment.HotelEquipmentName
                            </label>
                        </div>
                    }
                </div>

                <!-- 城市 -->
                <div style="margin:20px 10px" class="form-check-container-city">
                    <p>城市</p>
                    @foreach (var city in Model.Cities)
                    {
                        <div class="form-check city-item">
                            <input class="form-check-input" type="checkbox" value="@city.CityId" id="city_@city.CityId">
                            <label class="form-check-label" for="city_@city.CityId">
                                @city.CityName
                            </label>
                        </div>
                    }
                    <button id="toggleCityButton" class="toggle-button">顯示更多</button>
                </div>

                <!-- 房間設備 -->
                <div style="margin:20px 10px" class="form-check-container-room-equipment">
                    <p>房間設備</p>
                    @foreach (var roomEquipment in Model.RoomEquipments)
                    {
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" value="@roomEquipment.RoomEquipmentId" id="roomEquipment_@roomEquipment.RoomEquipmentId">
                            <label class="form-check-label" for="roomEquipment_@roomEquipment.RoomEquipmentId">
                                @roomEquipment.RoomEquipmentName
                            </label>
                        </div>
                    }
                </div>



            </div>

            <div class="col-lg-9 col-sm-12">
                <!-- 主內容區域，顯示酒店列表 -->
                <div class="navbar">
                    <button id="sortBtn">排序</button>
                    <button id="bestMatchBtn">最匹配選項</button>
                    <button id="highestRatedBtn">住客評鑑最高</button>
                    <button id="lowestPriceBtn">最低價格優先</button>
                    <button id="nearbyBtn">鄰近交通&景點</button>
                    <button id="hotDealBtn" class="special-button">搶手特惠!</button>
                </div>
                <div class="container">
                    <div class="row">
                        <div class="col-lg-12" style="border:1px solid gray">
                            <div class="container">
                                <div class="row" id="showhotels">
                                    <!-- 動態生成旅館 -->
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<!-- 右側動態廣告區域 -->
<div class="ad-container">
    <div id="carouselExampleIndicators" class="carousel slide" data-ride="carousel">
        <ol class="carousel-indicators">
            <li data-target="#carouselExampleIndicators" data-slide-to="0" class="active"></li>
            <li data-target="#carouselExampleIndicators" data-slide-to="1"></li>
            <li data-target="#carouselExampleIndicators" data-slide-to="2"></li>
        </ol>
        <div class="carousel-inner">
            <div class="carousel-item active">
                <img src="~/image/ming_img/排球少年1.jfif" class="d-block w-100" alt="Ad Image 1">
                <img src="~/image/ming_img/排球少年2.jfif" class="d-block w-100 mt-2" alt="Ad Image 2">
            </div>
            <div class="carousel-item">
                <img src="~/image/ming_img/排球少年3.jfif" class="d-block w-100" alt="Ad Image 3">
                <img src="~/image/ming_img/排球少年4.jpeg" class="d-block w-100 mt-2" alt="Ad Image 4">
            </div>
            <div class="carousel-item">
                <img src="~/image/ming_img/排球少年5.jpg" class="d-block w-100" alt="Ad Image 5">
                <img src="~/image/ming_img/排球少年6.jpg" class="d-block w-100 mt-2" alt="Ad Image 6">
            </div>
        </div>
        <a class="carousel-control-prev" href="#carouselExampleIndicators" role="button" data-slide="prev">
            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
            <span class="sr-only">Previous</span>
        </a>
        <a class="carousel-control-next" href="#carouselExampleIndicators" role="button" data-slide="next">
            <span class="carousel-control-next-icon" aria-hidden="true"></span>
            <span class="sr-only">Next</span>
        </a>
    </div>
</div>
<!--================ 台灣熱門城市 Area  =================-->
@section Scripts {

    <script>
        document.addEventListener("DOMContentLoaded", async function () {
            // 網頁加載完成後自動加載儲存在 sessionStorage 的 searchHotel 資訊
            const searchHotelJson = sessionStorage.getItem("searchHotel");
            if (searchHotelJson) {
                const searchHotel = JSON.parse(searchHotelJson);
                console.log(searchHotel);
                //解析並加載飯店資訊
                await loadHotels(searchHotel); 
            } else {
                console.log("searchHotel not found in sessionStorage");
            }

            // 監聽提交按鈕，獲取輸入值並發送請求
            const btnSubmit3 = document.querySelector("#buttonSubmit3");
            if (btnSubmit3) {
                btnSubmit3.addEventListener("click", async () => {
                    handleSubmitButtonClick();
                });
            }

            // 綁定搜索輸入框的按鍵事件
            const searchInput4 = document.querySelector("#search-input4");
            if (searchInput4) {
                searchInput4.addEventListener("keydown", async (event) => {
                    if (event.key === "Enter") {
                        handleSearchKeywordEnter();
                    }
                });
            }

            // 綁定所有複選框的事件監聽器
            const containerSelectors = [
                '.form-check-container-hotel-type',
                '.form-check-container-hotel-equipment',
                '.form-check-container-city',
                '.form-check-container-room-equipment'
            ];

            //所有指定容器內的複選框添加 change 事件監聽器，當複選框的狀態改變時，
            //觸發 updateSearchFilters 函數以更新搜尋條件並重新加載飯店資訊
            containerSelectors.forEach(selector => {
                document.querySelectorAll(`${selector} input[type="checkbox"]`).forEach(checkbox => {
                    checkbox.addEventListener('change', updateSearchFilters);
                });
            });

            // 綁定排序按鈕的點擊事件
            const sortButtons = {
                sortBtn: ["HotelId", "asc"],
                bestMatchBtn: ["LevelStar", "desc"],
                highestRatedBtn: ["TotalAverageScore", "desc"], // 修改這裡
                lowestPriceBtn: ["HotelPrice", "asc"],
                nearbyBtn: ["CityName", "asc"],
                hotDealBtn: ["deal", "desc"],
            };

            //為每個排序按鈕添加點擊事件監聽器，當按鈕被點擊時，
            // 觸發 handleSort 函數以設定排序方式並重新加載飯店資訊
            Object.keys(sortButtons).forEach(id => {
                document.querySelector(`#${id}`).addEventListener("click", () => handleSort(...sortButtons[id]));
            });

            // 設定 upperHandle 初始位置在滑動條的尾端
            const rangeSlider = {
                lowerHandle: document.getElementById('lowerHandle'),
                upperHandle: document.getElementById('upperHandle'),
                slider: document.getElementById('rangeSlider'),
                lowerLabel: document.getElementById('lowerLabel'),
                upperLabel: document.getElementById('upperLabel'),
                lowerInput: document.getElementById('lowerInput'),
                upperInput: document.getElementById('upperInput')
            };

            const max = parseFloat(rangeSlider.slider.getAttribute('max'));
            const position = 100; // 百分比位置
            rangeSlider.upperHandle.style.left = `${position}%`;
            rangeSlider.upperLabel.textContent = `上限：${max}`;
            rangeSlider.upperInput.value = max;

            // 初始化 lowerHandle 和 lowerLabel
            rangeSlider.lowerHandle.style.left = '0%';
            rangeSlider.lowerLabel.textContent = '下限：1';
            rangeSlider.lowerInput.value = 1;        
                        
            // 綁定滑桿拖動事件
            [rangeSlider.lowerHandle, rangeSlider.upperHandle].forEach(handle => {
                handle.addEventListener('mousedown', startDrag);
            });

            let isDragging = false;
            let currentHandle = null;

            // 開始拖動的處理函數
            function startDrag(event) {
                isDragging = true;
                currentHandle = event.target;
                document.addEventListener('mousemove', handleDrag);
                document.addEventListener('mouseup', stopDrag);
            }

            // 處理拖動邏輯的函數
            function handleDrag(event) {
                if (!isDragging) return;

                const handleType = currentHandle === rangeSlider.lowerHandle ? 'lower' : 'upper';
                const { handle, label, oppositeLabel, lowerInput, upperInput } = handleType === 'lower' ?
                    { handle: rangeSlider.lowerHandle, label: rangeSlider.lowerLabel, oppositeLabel: rangeSlider.upperLabel, lowerInput: rangeSlider.lowerInput, upperInput: rangeSlider.upperInput } :
                    { handle: rangeSlider.upperHandle, label: rangeSlider.upperLabel, oppositeLabel: rangeSlider.lowerLabel, lowerInput: rangeSlider.lowerInput, upperInput: rangeSlider.upperInput };

                const sliderRect = rangeSlider.slider.getBoundingClientRect();
                const position = Math.min(1, Math.max(0, (event.clientX - sliderRect.left) / sliderRect.width));
                const value = Math.round(parseFloat(rangeSlider.slider.getAttribute('min')) + position * (parseFloat(rangeSlider.slider.getAttribute('max')) - parseFloat(rangeSlider.slider.getAttribute('min'))));

                // 防止下限超過上限或上限低於下限
                if (handleType === 'lower' && value >= parseFloat(oppositeLabel.textContent.split('：')[1])) return;
                if (handleType === 'upper' && value <= parseFloat(oppositeLabel.textContent.split('：')[1])) return;

                handle.style.left = `${position * 100}%`;
                label.textContent = `${handleType === 'lower' ? '下限' : '上限'}：${value}`;
                handleType === 'lower' ? lowerInput.value = value : upperInput.value = value;
                updateHotels(parseFloat(rangeSlider.lowerInput.value), parseFloat(rangeSlider.upperInput.value));
            }

            // 停止拖動的處理函數
            function stopDrag() {
                isDragging = false;
                currentHandle = null;
                document.removeEventListener('mousemove', handleDrag);
                document.removeEventListener('mouseup', stopDrag);
            }
        });

        // 檢查所有選中的 checkbox 並返回其值的列表
        function getSelectedCheckboxes(containerSelector) {
            const checkboxes = document.querySelectorAll(`${containerSelector} input[type="checkbox"]:checked`);
            return Array.from(checkboxes).map(checkbox => parseInt(checkbox.value)); // 確保值是數字類型
        }

        // 更新搜尋篩選條件並加載飯店
        async function updateSearchFilters() {
            const searchHotelJson = sessionStorage.getItem('searchHotel');
            if (searchHotelJson) {
                const searchHotel = JSON.parse(searchHotelJson);
                searchHotel.hotelTypes = getSelectedCheckboxes('.form-check-container-hotel-type');
                searchHotel.hotelEquipments = getSelectedCheckboxes('.form-check-container-hotel-equipment');
                searchHotel.cities = getSelectedCheckboxes('.form-check-container-city');
                searchHotel.roomEquipments = getSelectedCheckboxes('.form-check-container-room-equipment');
                sessionStorage.setItem('searchHotel', JSON.stringify(searchHotel));
                await loadHotels(searchHotel);
            } else {
                console.log('searchHotel not found in sessionStorage');
            }
        }

        // 提交按鈕功能的函數 會被觸發
        async function handleSubmitButtonClick() {
            const searchHotel = {
                keyword: document.querySelector("#search-input3").value,
                checkInDate: document.querySelector("#myDatepickerstart3").value,
                checkOutDate: document.querySelector("#myDatepickerend3").value,
                roomnum: parseInt(document.querySelector("#rooms3").value),
                adults: parseInt(document.querySelector("#adults3").value),
                children: 0,
                sortBy: null,
                sortType: null,
                lowerPrice: parseInt(document.querySelector("#lowerInput").value),
                upperPrice: parseInt(document.querySelector("#upperInput").value),
                hotelTypes: getSelectedCheckboxes('.form-check-container-hotel-type'),
                hotelEquipments: getSelectedCheckboxes('.form-check-container-hotel-equipment'),
                cities: getSelectedCheckboxes('.form-check-container-city'),
                roomEquipments: getSelectedCheckboxes('.form-check-container-room-equipment')
            };

            // 儲存搜尋條件至 sessionStorage
            sessionStorage.setItem("searchHotel", JSON.stringify(searchHotel));
            // 發送請求並更新顯示結果
            await loadHotels(searchHotel);
        }

        // 處理搜索關鍵字的函數，會被觸發
        async function handleSearchKeywordEnter() {
            const searchHotel = {
                keyword: document.querySelector("#search-input4").value, // 獲取搜索關鍵字
                checkInDate: document.querySelector("#myDatepickerstart3").value, // 獲取入住日期
                checkOutDate: document.querySelector("#myDatepickerend3").value, // 獲取退房日期
                roomnum: parseInt(document.querySelector("#rooms3").value), // 獲取房間數量並轉換為整數
                adults: parseInt(document.querySelector("#adults3").value), // 獲取成人數量並轉換為整數
                children: 0, // 固定值，設為0
                sortBy: null, // 排序方式，暫時設為空
                sortType: null, // 排序類型，暫時設為空
                lowerPrice: parseInt(document.querySelector("#lowerInput").value), // 獲取最低價格並轉換為整數
                upperPrice: parseInt(document.querySelector("#upperInput").value), // 獲取最高價格並轉換為整數
                hotelTypes: getSelectedCheckboxes('.form-check-container-hotel-type'), // 獲取選中的酒店類型
                hotelEquipments: getSelectedCheckboxes('.form-check-container-hotel-equipment'), // 獲取選中的酒店設備
                cities: getSelectedCheckboxes('.form-check-container-city'), // 獲取選中的城市
                roomEquipments: getSelectedCheckboxes('.form-check-container-room-equipment') // 獲取選中的房間設備
            };

            // 將搜索條件存儲到 sessionStorage 中
            sessionStorage.setItem("searchHotel", JSON.stringify(searchHotel));
            // 發送請求並更新顯示結果
            await loadHotels(searchHotel);
        }

        // 更新飯店列表的函數
        async function updateHotels(lowerPrice, upperPrice) {
            const searchHotelJson = sessionStorage.getItem('searchHotel');
            if (searchHotelJson) {
                const searchHotel = JSON.parse(searchHotelJson);
                searchHotel.lowerPrice = lowerPrice;
                searchHotel.upperPrice = upperPrice;
                sessionStorage.setItem('searchHotel', JSON.stringify(searchHotel));
                await loadHotels(searchHotel);
            } else {
                console.log('searchHotel not found in sessionStorage');
            }
        }

        //取得飯店評分API的函式
        async function getHotelScore(hotelId) {
            const url = `https://localhost:7103/api/Comment/${hotelId}/AverageScores`;
            const response = await fetch(url);
            if (!response.ok) {
                console.error(`Failed to fetch hotel scores for hotel ID ${hotelId}`);
                throw new Error('Failed to fetch hotel scores');
            }
            const data = await response.json();
            console.log(`Hotel ID: ${hotelId}, Score Data: `, data); // 添加日志
            return data.totalAverageScore.toFixed(1); // 确保这里使用的是 totalAverageScore，并格式化为小数点后一位
        }


        // 从 sessionStorage 获取搜索条件(by louieee)-------------------------------------------------
        // => 扣louieee Controller, 把session的入駐日跟退訂日以query string傳過去
        function getSearchHotel() {
            const searchHotelForLouieee = JSON.parse(sessionStorage.getItem("searchHotel"));
            return searchHotelForLouieee;
        }
        // // 在 JavaScript 中加密查询字符串(by louieee)--------------------------------------------------
        // function encryptData(data, key) {
        //     //生成密钥和IV：
        //     const keyBytes = CryptoJS.enc.Utf8.parse(key);
        //     const iv = CryptoJS.lib.WordArray.random(16);
        //     //加密数据：
        //     const encrypted = CryptoJS.AES.encrypt(data, keyBytes, { iv: iv });
        //     //将IV和加密后的数据合并，并转换为Base64编码：
        //     const encryptedData = iv.concat(encrypted.ciphertext).toString(CryptoJS.enc.Base64);
        //     //确保加密数据URL安全：
        //     return encodeURIComponent(encryptedData);
        // }



        // 加載飯店的函數
        //異步函數，接受一個包含搜尋條件的 searchHotel 物件作為參數
        async function loadHotels(searchHotel) {
            const url = "https://localhost:7103/api/HotelSearch/indexsearch";
            const response = await fetch(url, {
                method: "POST",
                body: JSON.stringify(searchHotel),
                headers: { "Content-Type": "application/json" },
            });
            const data = await response.json();

            const divHotels = document.querySelector("#showhotels");
            divHotels.innerHTML = "";

            const searchHotelForLouieee = getSearchHotel();
            /* const secretKey = "my_secret_key123";  */// 使用一个安全的密钥, 确保长度为16字节(by louieee)

            // 將參數轉為string後加密 => 再作為查詢字串以網址傳遞(by louieee)
            // const encryptedHotelId = encryptData(hotel.hotelId.toString(), secretKey);
            // const encryptedCheckInDate = encryptData(searchHotelForLouieee.checkInDate, secretKey);
            // const encryptedCheckOutDate = encryptData(searchHotelForLouieee.checkOutDate, secretKey);


            // 從後端 API 獲取指定 hotelId 的評論數和最新評論
            async function getHotelCommentsCount(hotelId) {
                try {
                    const response = await fetch(`https://localhost:7103/api/Comment/${hotelId}/ForHotelComment`);
                    if (!response.ok) {
                        throw new Error(`HTTP error! status: ${response.status}`);
                    }
                    const data = await response.json();
                    console.log(data); // 確認返回的數據結構
                    return data.totalComments; // 確保返回的數據屬性名稱與後端一致
                } catch (error) {
                    console.error(`Error fetching comments count for hotel ID ${hotelId}:`, error);
                    return "N/A"; // 如果获取评论数失败，显示N/A
                }
            }

            // 生成並顯示飯店信息
            const hotels = await Promise.all(data.map(async hotel => {
                const { hotelId, hotelName, hotelAddress, hotelImages, levelStar, hotelEquipmentNames, hotelPrice } = hotel;
                let totalAverageScore;
                let commentsCount;

                try {
                    totalAverageScore = await getHotelScore(hotelId);
                } catch (error) {
                    console.error(`Error fetching score for hotel ID ${hotelId}:`, error);
                    totalAverageScore = "N/A"; // 如果获取评分失败，显示N/A
                }

                try {
                    commentsCount = await getHotelCommentsCount(hotelId);
                } catch (error) {
                    console.error(`Error fetching comments count for hotel ID ${hotelId}:`, error);
                    commentsCount = "N/A"; // 如果获取评论数失败，显示N/A
                }

                let ratingDescription;
                if (totalAverageScore >= 9) {
                    ratingDescription = "超讚";
                } else if (totalAverageScore >= 7) {
                    ratingDescription = "很讚";
                } else if (totalAverageScore >= 5) {
                    ratingDescription = "很好";
                } else if (totalAverageScore >= 3) {
                    ratingDescription = "尚可";
                } else {
                    ratingDescription = "低於預期";
                }

                console.log(`Hotel ID: ${hotelId}, Total Average Score: ${totalAverageScore}`); // 添加日志
                console.log(`Hotel Images: ${hotelImages}`); // 調試輸出圖片 URL
                console.log(`Comments Count: ${commentsCount}`); // 調試輸出評論數

                const mainImage = hotelImages[0] ? `https://localhost:7284/image/${hotelImages[0]}` : '';
                const smallImages = hotelImages.slice(1, 4).map(img => img ? `https://localhost:7284/image/${img}` : '');

                return `
            <div class="col-lg-12 hotel-card" data-hotel-id="${hotelId}">
                <div class="row">
                    <a href="https://localhost:7284/PgHotel/pgHotel/?hotelId=${hotelId}&checkInDate=${searchHotelForLouieee.checkInDate}&checkOutDate=${searchHotelForLouieee.checkOutDate}" class="col-lg-12 hotel-link">
                        <div class="row">
                            <div class="col-lg-4 col-sm-8 hotel-image-container" style="padding:0px">
                                <table>
                                    <tr>
                                        <td colspan="3" style="position: relative;">
                                            <img src="${mainImage}" class="img-fluid" style="width:100%" />
                                            <div class="favorite-icon-container">
                                                <i class="fa fa-heart favorite-icon" data-hotel-id="${hotelId}" onclick="toggleFavorite(event, ${hotelId})"></i>
                                            </div>
                                        </td>
                                    </tr>
                                    <tr>
                                        ${smallImages.map(img => `<td><img src="${img}" class="img-fluid" /></td>`).join('')}
                                    </tr>
                                </table>
                            </div>
                            <div class="col-lg-5 col-sm-10 hotel-details">
                                <h3>${hotelName}</h3>
                                <span>${levelStar}星級飯店 </span><span style="color:blue">${hotelAddress}</span>
                                <h6>此住宿提供:</h6>
                                ${hotelEquipmentNames.map(name => `<h5 style="border: 1px solid black; display: inline-block;">${name}</h5>`).join('')}
                                <br>
                                <h6 style="color:green">${levelStar}星級飯店最優價</h6>
                                <h6 style="color:red">昨天起已收到${levelStar}張訂單</h6>
                            </div>

                            <div class="col-lg-3 col-sm-12 hotel-pricing">
                                <div class="rating">
                                    <div class="rating-text">
                                        <span class="rating-count">${ratingDescription}</span>
                                        <span class="rating-count">${commentsCount}篇評鑑</span> <!-- 直接使用commentsCount -->
                                    </div>
                                    <span class="rating-score">${totalAverageScore}</span>
                                </div>
                                <br>
                                <h6 style="border: 1px solid red; display:inline-block; background-color: red; color:white">優惠只剩1間</h6>
                                <h6 style="color:gray">每晚價格(不連稅及其他費用)</h6>
                                <br><br>
                                <h3>NT$${hotelPrice}</h3>
                            </div>
                        </div>
                    </a>
                </div>
            </div>
        `;
            }));

            divHotels.innerHTML = hotels.join("");
        }





        // 切換最愛狀態的函數
        async function toggleFavorite(event, hotelId) {
            event.stopPropagation();  // 防止點擊事件傳遞到其他元素
            event.preventDefault();   // 阻止默認的跳轉行為
            const icon = event.currentTarget;
            const isLiked = icon.classList.toggle("liked");

            const url = "https://localhost:7103/api/HotelSearch/hotelLike";
            const response = await fetch(url, {
                method: "POST",
                body: JSON.stringify({
                    HotelId: hotelId,
                    MemberId: 1,  // 這裡應該替換為實際的會員ID
                    LikeStatus: isLiked
                }),
                headers: { "Content-Type": "application/json" },
            });

            if (!response.ok) {
                // 如果API請求失敗，恢復愛心圖標的狀態
                icon.classList.toggle("liked");
                alert("無法更新最愛狀態，請稍後再試");
            }
        }

        // 處理排序的邏輯函數
        async function handleSort(sortBy, sortType) {
            const searchHotelJson = sessionStorage.getItem('searchHotel');
            if (searchHotelJson) {
                const searchHotel = JSON.parse(searchHotelJson);
                searchHotel.sortBy = sortBy;
                searchHotel.sortType = sortType;
                sessionStorage.setItem('searchHotel', JSON.stringify(searchHotel));
                await loadHotels(searchHotel);
            } else {
                console.log('searchHotel not found in sessionStorage');
            }
        }
    </script>


    <script>
        // 解決 checkbox 內容太長的問題
        document.addEventListener("DOMContentLoaded", function () {
            const toggleButton = document.querySelector("#toggleCityButton");
            const formCheckContainer = document.querySelector(".form-check-container-city");

            toggleButton.addEventListener("click", function () {
                formCheckContainer.classList.toggle("expanded");
                if (formCheckContainer.classList.contains("expanded")) {
                    toggleButton.textContent = "顯示較少";
                } else {
                    toggleButton.textContent = "顯示更多";
                }
            });
        });
    </script>

}

@section Styles {
    @* 價格搜尋拉霸設定 *@
    <style>
         
        .slider-container {
            display: flex;
            flex-direction: column;
        }

        .range-slider {
            position: absolute;
            width: 83%;
            height: 6px;
            background: #ddd;
            border-radius: 3px;
        }

        .slider-handle {
            position: absolute;
            width: 20px;
            height: 20px;
            background: #007bff;
            border-radius: 50%;
            cursor: pointer;
            top: -7px;
            z-index: 10;
        }

        .label-container {
            display: flex;
            justify-content: space-between;
            margin-top: 15px;
        }

        .input-container {
            display: flex;
            justify-content: space-between;
        }

            .input-container input {
                width: 45%;
                z-index: 1;
            }

    </style>
    @* 主搜尋欄的下拉式選單 *@
    <style>     
        .navbar {
            display: flex;
            border: 1px solid #ddd;
            padding: 10px;
            background-color: #f9f9f9;
            border-radius: 8px;
        }

            .navbar button {
                margin: 0 5px;
                padding: 10px 15px;
                border: 1px solid #ccc;
                background-color: #fff;
                cursor: pointer;
            }

                .navbar button:hover {
                    background-color: #f1f1f1;
                }

            .navbar .special-button {
                background-color: #4285f4;
                color: white;
                border: none;
            }

                .navbar .special-button:hover {
                    background-color: #357ae8;
                }
        /* 移除 input 上下箭頭 */
        .no-spinner::-webkit-outer-spin-button,
        .no-spinner::-webkit-inner-spin-button {
            -webkit-appearance: none;
            margin: 0;
        }

    </style>
    @* checkbox設定 *@
    <style>
        /* 設定 checkbox 和標籤的樣式 */
        .form-check-label {
            display: flex;
            align-items: center;
            cursor: pointer;
            font-size: 14px;
            margin-left: -20px; /* 調整這個數值以讓 checkbox 與標題對齊 */
        }

        /* 隱藏原本的 checkbox */
        .form-check-input {
            appearance: none;
            -webkit-appearance: none;
            -moz-appearance: none;
            width: 0;
            height: 0;
            position: absolute;
            opacity: 0;
        }

            /* 自定義的 checkbox 樣式 */
            .form-check-input + .form-check-label::before {
                content: '';
                display: inline-block;
                width: 16px;
                height: 16px;
                border: 1px solid #ccc;
                border-radius: 2px;
                margin-right: 10px;
                vertical-align: middle;
                background-color: #fff;
            }

            /* 當 checkbox 被選中時的樣式 */
            .form-check-input:checked + .form-check-label::before {
                content: '\2713';
                display: inline-block;
                width: 16px;
                height: 16px;
                border: 1px solid #007bff;
                border-radius: 2px;
                margin-right: 10px;
                vertical-align: middle;
                background-color: #007bff;
                color: #fff;
                text-align: center;
                line-height: 16px;
            }

            .form-check-input:hover + .form-check-label::before {
                border-color: #007bff;
            }

        /* 城市選單樣式 */
        .form-check-container-city .city-item {
            display: none;
        }

            .form-check-container-city .city-item:nth-child(-n+10) {
                display: block;
            }

        .form-check-container-city.expanded .city-item {
            display: block;
        }

        /* 顯示更多按鈕樣式 */
        .toggle-button {
            margin-top: 10px;
            padding: 5px 10px;
            background-color: #007bff;
            color: white;
            border: none;
            cursor: pointer;
            border-radius: 5px;
        }

        /* 標題樣式 */
        .form-check-container-hotel-type > p,
        .form-check-container-hotel-equipment > p,
        .form-check-container-city > p,
        .form-check-container-room-equipment > p {
            font-size: 18px; /* 調整字體大小 */
            font-weight: bold; /* 調整字體粗細 */
            margin-bottom: 10px;
        }

    </style>
    @* 點擊旅館的效果 *@
    <style>        
        .col-lg-4.col-sm-8 {
            height: 280px; /* 設置一個固定的高度，可根據需要調整 */
            padding: 0;
        }

            .col-lg-4.col-sm-8 table {
                height: 100%;
                width: 100%;
            }

            .col-lg-4.col-sm-8 img {
                object-fit: cover; /* 讓圖片完整顯示，並填滿容器 */
                height: 100%;
                width: 100%;
            }

        .hotel-card {
            margin: 10px 0; /* 添加間距 */
            box-shadow: 0 4px 8px rgba(0,0,0,0.1);
            border-radius: 5px;
            overflow: hidden;
            background-color: #fff; /* 設置初始背景為白色 */
            transition: box-shadow 0.3s ease, background-color 0.3s ease; /* 添加過渡效果 */
            display: flex; /* 使用 flex 布局 */
        }

            .hotel-card:hover {
                box-shadow: 0 8px 16px rgba(0,0,0,0.2); /* 滑鼠滑過時增加陰影 */
            }

                .hotel-card:hover .hotel-details, .hotel-card:hover .hotel-pricing {
                    background-color: #f0f8ff; /* 滑鼠滑過時變為淺藍色 */
                }

            .hotel-card h3 {
                margin-top: 10px;
            }

        .hotel-details {
            border: 1px solid #FCFCFC;
            border-right: 2px solid #F0F0F0;

            background-color: #fff; /* 初始背景為白色 */
            padding: 5px; /* 增加內邊距 */
            flex: 2; /* 設置 flex 屬性 */
            transition: background-color 0.3s ease; /* 添加過渡效果 */
        }

        .hotel-pricing {
            border: 1px solid #FCFCFC;
            border-left: none; /* 移除左邊框 */
            text-align: right;
            background-color: #fff; /* 初始背景為白色 */
            padding: 10px; /* 增加內邊距 */
            flex: 1; /* 設置 flex 屬性 */
            transition: background-color 0.3s ease; /* 添加過渡效果 */
        }

        .hotel-info {
            display: flex; /* 使用 flex 布局 */
            width: 100%;
        }
    </style>
    @* index2跳轉至PGHotel專用 *@
    <style>
        
        a.hotel-link {
            text-decoration: none;
            color: inherit;
        }

        a.hotel-link:hover {
            text-decoration: none;
            color: inherit;
        }

        a.hotel-link:active {
            text-decoration: none;
            color: inherit;
        }

        a.hotel-link:visited {
            text-decoration: none;
            color: inherit;
        }
    </style>
    @* 廣告區 *@
    <style>
        
        .ad-container {
            position: fixed;
            right: 50px;  /* //距離頁面右側的位置 */
            top: 49%;    /* //圖片位於頁面的高度 */
            transform: translateY(-50%);
            width: 320px;
            z-index: 1000;
            padding: 10px;
            background-color: #fff;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }

            .ad-container img {
                width: 100%;
                margin-bottom: 15px;
            }
    </style>
    @* 我的最愛 *@
    <style>
        
        .hotel-card {
            margin-bottom: 10px;
            border: 1px solid #ddd;
            position: relative;
        }

            .hotel-card .favorite-icon-container {
                position: absolute;
                top: 10px;
                right: 10px;
                width: 36px;
                height: 36px;
                background-color: white;
                border-radius: 50%;
                display: flex;
                align-items: center;
                justify-content: center;
            }

            .hotel-card .favorite-icon {
                font-size: 24px;
                cursor: pointer;
                color: grey;
            }

                .hotel-card .favorite-icon.liked {
                    color: red;
                }

        .hotel-image-container {
            position: relative;
        }

        .small-images-container {
            padding: 0;
        }

            .small-images-container img {
                width: 32%;
                margin: 1%;
            }
    </style>
    @* 評分表 *@
    <style>        
        .rating {
            display: flex;
            align-items: center;
            justify-content: flex-end;
            margin-bottom: 10px;
        }

        .rating-text {
            display: flex;
            flex-direction: column;
            text-align: right;
            margin-right: 10px;
        }

        .rating-score {
            background-color: #005eb8;
            color: white;
            border-radius: 50%;
            padding: 5px 10px;
            font-size: 1em;
            font-weight: bold;
        }

        .rating-count {
            color: gray;
            line-height: 1.2;
        }
    </style>
}


