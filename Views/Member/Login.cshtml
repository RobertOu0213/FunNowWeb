@{
    // ViewData["Title"] = "登入";
    Layout = "_Layout_login";
}



<meta charset="utf-8" />
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" crossorigin="anonymous"></script>
<script src="https://kit.fontawesome.com/9bbb5484f7.js" crossorigin="anonymous"></script>
<script src="https://www.google.com/recaptcha/api.js" async defer></script>


<body>
   

    <!--表單欄-->
    <div class="container" style="margin-top:50px">
        <div class="row justify-content-center align-items-center">
            <div class="col-lg-5 " style="min-width: 350px; max-width: 500px;">
                <div class="card border-0 shadow rounded-3 my-5 ">
                    <div class="card-body p-4 p-sm-5 " style="white-space: nowrap;">
                        <h3 class="sc-fzqyvX kJWwZs kite-js-Typography ">FunNow咖登入</h3>
                        <p>為了保障你的個資安全，請先登入才能查看個人資訊</p>
                        <hr style="border-top: 3px solid #0D6EFD; ">
                        <form id="loginForm">
                            <div class="mb-3">
                                <label for="EmailInput" class="form-label" style="font-size:15px">電子信箱</label>
                                <input type="email" class="form-control" id="EmailInput1" name="EmailInput" placeholder="電子信箱" onchange="queryEmail()">
                                <p id="resultYes" style="display:none" class="resultY form-text text-success">歡迎回來！趕緊輸入密碼來登入吧！</p>
                                <p id="resultNo" style="display:none" class="resultN form-text text-danger">Oops！這個Email沒有註冊過欸，請點選「我是新朋友」加入我們!</p>
                                <p id="resultNoEmail" style="display:none" class="resultN form-text text-danger">Oops！你的Email註冊過了，但還沒驗證啟用喔!快去信箱確認吧!</p>
                            </div>
                            <div id="result"></div>
                            <p></p>
                            <div class="mb-3">
                                <label for="PasswordInput" class="form-label" style="font-size:15px">密碼</label>
                                <input type="password" class="form-control" id="PasswordInput1" name="PasswordInput" placeholder="密碼">
                            </div>
                            <div class="mb-3">
                                <div class="g-recaptcha"
                                     data-sitekey="6Ld5o_cpAAAAAG_63ZgwisKvy1y6H_RHfCVKPiZ4"
                                     data-theme="light"
                                     data-size="normal"
                                     data-expired-callback="expired"
                                     data-error-callback="error">
                                </div>
     

                            </div>

                            <div class="d-grid">
                                <button class="btn btn-primary btn-login text-uppercase fw-bold" type="button" id="loginBtn">登入</button>
                            </div>
                            <p></p>
                            <p id="error" class="alert alert-danger" style="display:none;">登入失敗，請重新確認電子信箱與密碼</p>
                            <div class="row">
                                <div>
                                    <a class="col ff1" asp-controller="Member" asp-action="Register">我是新朋友</a>
                                    <a class="col" style="font-size:14px"><i class="fa-solid fa-lock" style="color: #0d6efd;"></i> 忘記密碼？別慌，點此找幫手！</a>
                                </div>
                            </div>
                            <p style="margin:40px"></p>

                            <span class="line"></span>
                            <span>或使用以下方式登入</span>
                            <span class="line"></span>
                            <p></p>
                            <div class="d-grid mb-2">
                                <button class="btn btn-outline-danger fw-bold py-2 btn-zoom" type="submit" a asp-controller="Member" asp-action="LoginByGoogle">
                                    <i class="fab fa-google me-2"></i> Google
                                </button>
                            </div>
                            <div class="row">
                                <div class="col d-grid">
                                    <button class="btn btn-outline-primary fw-bold py-2 btn-zoom" type="submit">
                                        <i class="fab fa-facebook-f me-2"></i> Facebook
                                    </button>
                                </div>
                                <div class="col d-grid">
                                    <button class=" btn btn-outline-success fw-bold py-2 btn-zoom" type="submit">
                                        <i class="fa-brands fa-line"></i> Line
                                    </button>
                                </div>
                            </div>

                            <p style="margin:30px"></p>
                            <p style="text-align: center; font-size:13px;">點擊登錄即代表我同意FunNow的<a class="col bb">服務條款</a>和<a class="col bb">隱私權政策</a>。</p>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</body>



@section Styles
{
    <style>
        body {
            background: #F9F9F9;
            /*background: linear-gradient(to right, #0062E6, #33AEFF);*/
        }

        .btn-login {
            font-size: 0.9rem;
            letter-spacing: 0.05rem;
            padding: 0.75rem 1rem;
            background-color: #5392F9;
            border: none;
        }

            .btn-login:hover {
                background-color: #87b3fb;
            }

        a {
            text-decoration: none;
        }

            a:hover {
                color: #87b3fb;
                text-decoration: underline;
            }

        .btn-google {
            color: white !important;
            background-color: #ea4335;
        }

        .btn-facebook {
            color: white !important;
            background-color: #3b5998;
        }

        .btn-zoom {
            transition: transform 0.3s ease; /* 添加过渡效果 */
        }

            .btn-zoom:hover {
                transform: scale(1.02); /* 鼠标悬停时放大 1.1 倍 */
            }

        h3 {
            font-weight: 800;
        }

        .ff1 {
            font-size: 14px;
            margin: 0 70px 0 0;
            padding-left:0;
        }

        .line {
            display: inline-block;
            width: 120px;
            border-top: 1px solid #cccccc;
            vertical-align: 5px;
        }
        .bb
        {
           padding:0px;
        }


    </style>
}


@section Scripts
{

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    
    <script>
        const emailInput = document.getElementById("EmailInput1");
        const passwordInput = document.getElementById("PasswordInput1");
        const errorElement = document.getElementById("error");
        const loginBtn = document.getElementById("loginBtn");

        //即時比對是否有該帳號存在
        async function queryEmail() {
            var email = emailInput.value;

            try {
                const response = await fetch("https://localhost:7103/api/Members/query", {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ email: email })
                });

                const data = await response.json();
                var resultElementY = document.getElementById("resultYes");
                var resultElementN = document.getElementById("resultNo");
                var resultElementNoEmail = document.getElementById("resultNoEmail");

                resultElementY.style.display = "none";
                resultElementN.style.display = "none";
                resultElementNoEmail.style.display = "none";

                if (data.message === "YES") 
                {
                    resultElementY.style.display = "block";
                    emailInput.classList.remove("border", "border-danger");
                } else if (data.message === "NO") 
                {
                    resultElementN.style.display = "block";
                    emailInput.classList.add("border", "border-danger");
                }
                else if (data.message === "NoVerify") 
                {
                    resultElementNoEmail.style.display = "block";
                    emailInput.classList.add("border", "border-danger");
                }
            } catch (error) {
                console.error('Error:', error);
            }
        }


        //先取得reCaptcha驗證結果並繼續登入
        async function verifyCaptchaAndLogin() {
            const reCaptchaResponse = grecaptcha.getResponse();
            if (!reCaptchaResponse) {
                alert("請先完成我不是機器人的驗證");
                return;
            }

            try {
                const fetchResponse = await fetch("https://localhost:7103/api/reCaptcha/VerifyCaptcha", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify({ response: reCaptchaResponse })
                });

                const data = await fetchResponse.json();
                if (data.success) 
                {    
                    await login();
                } 
                else 
                {
                    alert("Captcha 驗證失敗，請重試");
                }
            } 
            catch (error) 
            {
                console.error("Error:", error);
                alert("reCaptcha 驗證失敗，請重試");
            }
        }


        // JWT驗證登入
        async function login() {
            const email = document.getElementById("EmailInput1").value;
            const password = document.getElementById("PasswordInput1").value;

            try {
                const response = await fetch("https://localhost:7103/api/Login", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify({ email, password })
                });

                //如果成功串接API
                if (response.ok) {
                    
                    //拿到API回傳的資訊
                    const data = await response.json();

                    // 清除先前的LocalStorage，避免爆錯
                    clearSessionStorage();

                    // 把拿到資訊儲存在localStorage裡面
                    sessionStorage.setItem("JWToken", data.token);
                    sessionStorage.setItem("MemberID", data.memberInfo.memberId);
                    sessionStorage.setItem("MemberFisrtName", data.memberInfo.firstName);
                    sessionStorage.setItem("MemberLastName", data.memberInfo.lastName);
                    sessionStorage.setItem("MemberEmail", data.memberInfo.email);
                    sessionStorage.setItem("MemberPhone", data.memberInfo.phone);
                    sessionStorage.setItem("MemberBirthday", data.memberInfo.birthday);
                    sessionStorage.setItem("MemberRoleID", data.memberInfo.roleId);

                    console.log("攔截器啟動");
                    // 設置請求攔截器以自動添加Authorization標頭
                    // 重新定義全域的 window.fetch 函式, 在發送每個請求時自動將 JWT Token 添加到請求標頭中。

                    // 保存了原始的 fetch 函式
                    const originalFetch = window.fetch;

                    // 重新定義 window.fetch
                    // ...args 是一個 rest 參數語法,它可以將所有傳入的參數收集到一個陣列中
                    window.fetch = async (...args) => {


                        //這一行是使用解構賦值來從 args 陣列中取出第一個元素(即資源 URL)並指派給 resource 變數,
                        //同時將第二個元素(即請求配置物件)指派給 config 變數。 
                        const [resource, config] = args;
                        const token = sessionStorage.getItem('JWToken');
                        if (!token) 
                        {
                            console.log("沒有拿到token");
                            return originalFetch(resource, config);
                        }

                        // 如果有 Token,構建一個新的請求配置物件
                        const newConfig = {
                            ...config,
                            headers: {
                                ...config.headers,
                                Authorization: `Bearer ${token}`
                            }
                        };

                        console.log("拿到token");
                        console.log(resource);
                        console.log(newConfig);
                        console.log("攔截器結束");
                        //如果原始配置物件 config 不存在,它會直接創建一個新物件,只包含 headers 屬性,其值為 { Authorization: Bearer ${token} }。
                        return originalFetch(resource, newConfig);
                    };

                    //通過攔截器後重新導向首頁
                    console.log("攔截器通過");
                } 
                else 
                {
                    // 清空使用者填寫的密碼欄位
                    document.getElementById("PasswordInput1").value = "";
                    alert("登入失敗，請重新確認電子信箱和密碼");
                }
            } 
            catch (error) 
            {
                console.error('錯誤為:', error);
            }
        }

        // 清除SessionStorage
        function clearSessionStorage() {
            sessionStorage.removeItem("JWToken");
            sessionStorage.removeItem("MemberID");
            sessionStorage.removeItem("MemberFisrtName");
            sessionStorage.removeItem("MemberLastName");
            sessionStorage.removeItem("MemberEmail");
            sessionStorage.removeItem("MemberPhone");
            sessionStorage.removeItem("MemberBirthday");
            sessionStorage.removeItem("MemberRoleID");
        }

        // 監聽登入按鈕點擊事件，先驗證reCaptcha再驗證JWT
        document.getElementById("loginBtn").addEventListener("click", async function (event) {
            event.preventDefault();
            await verifyCaptchaAndLogin();
            
            // 檢查是不是有紅框錯誤
            const redBorderElements = document.querySelectorAll('.border-danger');
            if (redBorderElements.length > 0) {
                alert('有紅框處尚未修改，請再次確認');
                return;
            }
           //全部都驗證完，就導向到首頁
            window.location.href = "/Home/Index";
        });

 
    </script>


    
    <script>
        //Google驗證失敗時跳出的錯誤訊息
        document.addEventListener("DOMContentLoaded", function () {
            var errorMessage = '@TempData["ErrorMessage"]';
            if (errorMessage) {
                alert(errorMessage);
            }

        });

    </script>
   
}