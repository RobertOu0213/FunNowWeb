@using System.Web
@{
        Layout = "_Layout_unLogin";
    var memberID = Context.Session.GetString("MemberID");
    var googleMemberId = Context.Session.GetString("GoogleMemberID");
}

<meta charset="utf-8" />
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" crossorigin="anonymous"></script>
<script src="https://kit.fontawesome.com/9bbb5484f7.js" crossorigin="anonymous"></script>
<script src="https://www.google.com/recaptcha/api.js" async defer></script>
<title>FunNow歡迎你登入!開啟你的精彩旅程~</title>

<body>
    <div class="container" style="margin-top:20px">
        <div class="row justify-content-center align-items-center">
            <div class="col-lg-5 " style="min-width: 350px; max-width: 500px;">
                <div class="card border-0 shadow rounded-3 my-5 ">
                    <div class="card-body p-4 p-sm-5 " style="white-space: nowrap;">
                        <h3 class="sc-fzqyvX kJWwZs kite-js-Typography ">FunNow咖登入</h3>
                        <p>為了保障你的個資安全，請先登入才能查看個人資訊</p>
                        
                        <button class="btn btn-success" id="guestBtn">房客Demo(已驗證)</button>
                        <button class="btn btn-warning" id="forbidBtn">房客Demo(未驗證)</button>
                        </br>
                        <button class="btn btn-secondary" id="adminBtn">管理員Demo</button> 
                        <button class="btn btn-danger" id="hostBtn">房東Demo</button>

                        <hr style="border-top: 3px solid #0D6EFD; ">
                        <form id="loginForm">
                            <div class="mb-3">
                                <label for="EmailInput" class="form-label" style="font-size:15px">電子信箱</label>
                                <input type="email" class="form-control" id="EmailInput1" name="EmailInput" placeholder="電子信箱" onchange="queryEmail()">
                                <p id="resultYes" style="display:none" class="resultY form-text text-success">歡迎回來！趕緊輸入密碼來登入吧！</p>
                                <p id="resultNo" style="display:none" class="resultN form-text text-danger">Oops！這個Email沒有註冊過欸，請點選「我是新朋友」加入我們!</p>
                                <p id="resultNoEmail" style="display:none" class="resultN form-text text-danger">Oops！你的Email註冊過了，但還沒驗證啟用！<a id="reSent" href="/">點我重寄驗證信</a></p>
                            </div>
                            <div id="result"></div>
                            <p></p>

                            <div class="mb-3">
                                <label for="PasswordInput" class="form-label" style="font-size:15px">密碼</label>
                                <div class="input-group">
                                    <input type="password" class="form-control" id="PasswordInput1" name="Password" placeholder="密碼" style="border-right:none;">
                                    <span class="input-group-text" id="togglePasswordIcon" style="background-color:white; border-left:none; height:38.5px;">
                                        <i class="fa-solid fa-eye-slash"></i>
                                    </span>
                                </div>
                            </div>

                            <div class="mb-3">
                                <div class="g-recaptcha"
                                     data-sitekey="6Ld5o_cpAAAAAG_63ZgwisKvy1y6H_RHfCVKPiZ4"
                                     data-theme="light"
                                     data-size="normal"
                                     data-expired-callback="expired"
                                     data-error-callback="error">
                                </div>
                            </div>

                            <div class="d-grid">
                                <button class="btn btn-primary btn-login text-uppercase fw-bold" type="button" id="loginBtn">登入</button>
                            </div>
                            <p></p>
                            <p id="error" class="alert alert-danger" style="display:none;">登入失敗，請重新確認電子信箱與密碼</p>
                            <div class="row">
                                <div>
                                    <a class="col ff1" asp-controller="Member" asp-action="Register">我是新朋友</a>
                                    <a class="col" style="font-size:14px; margin-left:20px;" asp-controller="ForgetPwd" asp-action="ForgotPassword"><i class="fa-solid fa-lock" style="color: #0d6efd;"></i> 忘記密碼？別慌，點此找幫手！</a>
                                </div>
                            </div>
                            <p style="margin:40px"></p>

                            <span class="line"></span>
                            <span>或使用以下方式登入</span>
                            <span class="line"></span>
                            <p></p>
                            <div class="d-grid mb-2">
                                <button class="btn btn-outline-danger fw-bold py-2 btn-zoom" type="submit" a asp-controller="Member" asp-action="LoginByGoogle">
                                    <i class="fab fa-google me-2"></i> Google
                                </button>
                            </div>
                         @*    <div class="row">
                                <div class="col d-grid">
                                    <button class="btn btn-outline-primary fw-bold py-2 btn-zoom" type="submit">
                                        <i class="fab fa-facebook-f me-2"></i> Facebook
                                    </button>
                                </div>
                                <div class="col d-grid">
                                    <button class=" btn btn-outline-success fw-bold py-2 btn-zoom" type="submit">
                                        <i class="fa-brands fa-line"></i> Line
                                    </button>
                                </div>
                            </div> *@

                            <p style="margin:30px"></p>
                            <p style="text-align: center; font-size:13px;">點擊登錄即代表我同意FunNow的<a class="col bb">服務條款</a>和<a class="col bb">隱私權政策</a>。</p>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>

    @* 根據角色權限顯示錯誤訊息，避免出現亂碼用decodeURIComponent *@
    @if (ViewBag.ErrorMessage != null)
    {
        <script>
            alert(decodeURIComponent('@Html.Raw(System.Web.HttpUtility.UrlEncode(ViewBag.ErrorMessage))')); 
        </script>
    }

</body>

@section Styles
{
    <style>
        body {
            background: #F9F9F9;
        }

        .btn-login {
            font-size: 0.9rem;
            letter-spacing: 0.05rem;
            padding: 0.75rem 1rem;
            background-color: #5392F9;
            border: none;
        }

        .btn-login:hover {
            background-color: #87b3fb;
        }

        a {
            text-decoration: none;
        }

        a:hover {
            color: #87b3fb;
            text-decoration: underline;
        }

        .btn-google {
            color: white !important;
            background-color: #ea4335;
        }

        .btn-facebook {
            color: white !important;
            background-color: #3b5998;
        }

        .btn-zoom {
            transition: transform 0.3s ease;
        }

        .btn-zoom:hover {
            transform: scale(1.02);
        }

        h3 {
            font-weight: 800;
        }

        .ff1 {
            font-size: 14px;
            margin: 0 70px 0 0;
            padding-left: 0;
        }

        .line {
            display: inline-block;
            width: 120px;
            border-top: 1px solid #cccccc;
            vertical-align: 5px;
        }

        .bb {
            padding: 0px;
        }

        .spinner {
            border: 10px solid #f3f3f3;
            border-top: 5px solid #3498db;
            border-radius: 50%;
            width: 100px;
            height: 100px;
            animation: spin 1s linear infinite;
        }

        @@keyframes spin {
            0% {
                transform: rotate(0deg);
            }

            100% {
                transform: rotate(360deg);
            }
        }

        .loading-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.5);
            display: flex;
            justify-content: center;
            align-items: center;
            z-index: 9999;
        }
    </style>
}

@section Scripts
{
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    
    <script>
        const emailInput = document.getElementById("EmailInput1");
        const passwordInput = document.getElementById("PasswordInput1");
        const errorElement = document.getElementById("error");
        const loginBtn = document.getElementById("loginBtn");

        async function queryEmail() {
            var email = emailInput.value;

            try {
                const response = await fetch("https://localhost:7103/api/Members/query", {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ email: email })
                });

                const data = await response.json();
                var resultElementY = document.getElementById("resultYes");
                var resultElementN = document.getElementById("resultNo");
                var resultElementNoEmail = document.getElementById("resultNoEmail");

                resultElementY.style.display = "none";
                resultElementN.style.display = "none";
                resultElementNoEmail.style.display = "none";

                if (data.message === "YES") {
                    resultElementY.style.display = "block";
                    emailInput.classList.remove("border", "border-danger");
                } else if (data.message === "NO") {
                    resultElementN.style.display = "block";
                    emailInput.classList.add("border", "border-danger");
                } else if (data.message === "NoVerify") {
                    resultElementNoEmail.style.display = "block";
                    emailInput.classList.add("border", "border-danger");
                }
            } catch (error) {
                console.error('Error:', error);
            }
        }

        async function verifyCaptchaAndLogin() {
            const reCaptchaResponse = grecaptcha.getResponse();
            if (!reCaptchaResponse) {
                alert("請先完成我不是機器人的驗證");
                return "captchaError";
            }

            try {
                const fetchResponse = await fetch("https://localhost:7103/api/reCaptcha/VerifyCaptcha", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify({ response: reCaptchaResponse })
                });

                const data = await fetchResponse.json();
                if (data.success) {
                    const loginResult = await login();
                    console.log(loginResult);
                    return loginResult;
                } else {
                    alert("Captcha 驗證失敗，請重試");
                    grecaptcha.reset();
                    return "captchaError";
                }
            } catch (error) {
                console.error("Error:", error);
                alert("reCaptcha 驗證失敗，請重試");
                grecaptcha.reset();
                return "captchaError";
            }
        }

        async function login() {
            const email = document.getElementById("EmailInput1").value;
            const password = document.getElementById("PasswordInput1").value;

            const loginData = {
                Email: email,
                Password: password,
            };

            try {
                const response = await fetch('/Member/LoginWithAPI', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(loginData)
                });
                console.log(loginData);
                if (!response.ok) {
                    alert("輸入帳號密碼錯誤，或有紅框錯誤，請檢查後重新輸入");
                    document.getElementById("PasswordInput1").value = "";
                    grecaptcha.reset();
                    return "loginError";
                }

                const data = await response.json();
                console.log(data);
                return data;

            } catch (error) {
                console.error('登入失敗:', error);
                document.getElementById("PasswordInput1").value = "";
                grecaptcha.reset();
                return "loginError";
            }
        }

        document.getElementById("loginBtn").addEventListener("click", async function (event) {
            event.preventDefault();

            const result = await verifyCaptchaAndLogin();

            if (result === "captchaError" || result === "loginError") {
                return;
            }

            const redBorderElements = document.querySelectorAll('.border-danger');
            if (redBorderElements.length > 0) {
                alert('有紅框處尚未修改，請再次確認');
                return;
            }

            let LoginmemberID = result.memberID; //從這裡拿到login函數中data的資料
            
            try {
                const response = await fetch("https://localhost:7103/api/Members/returnRoleID", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify({ memberId: LoginmemberID }) 
                });

                const data = await response.json();

                if (data.roleID === 4) 
                {
                    alert("您的帳戶已被刪除，請重新註冊");

                } else if (data.roleID === 3) 
                {
                    alert("您的帳戶已被鎖定，請洽客服協助解鎖");

                } else if (data.roleID === 2) 
                {
                    alert("管理員歡迎您");
                    window.location.href = "/PgBack_Member/pgBack_Member";

                } else if (data.roleID === 1) 
                {
                     window.location.href = "/home/index";
                }

            } catch (error) {
                console.error("Error:", error);
                alert("角色驗證錯誤");
            }
        });

        document.addEventListener("DOMContentLoaded", function () {
            var errorMessage = '@TempData["ErrorMessage"]';
            if (errorMessage) {
                alert(errorMessage);
            }
        });


        //===等待動畫相關==========================
        // 顯示等待動畫的函數
        function showLoadingAnimation() {
            // 創建加載動畫元素
            const loadingOverlay = document.createElement('div');
            loadingOverlay.className = 'loading-overlay';
            loadingOverlay.id = 'loading-animation';

            const spinner = document.createElement('div');
            spinner.className = 'spinner';

            loadingOverlay.appendChild(spinner);
            document.body.appendChild(loadingOverlay);
        }

        // 隱藏等待動畫的函數
        function hideLoadingAnimation() {
            const loadingElement = document.getElementById('loading-animation');
            if (loadingElement) {
                loadingElement.remove();
            }
        }


        //=重寄驗證信====================
        document.getElementById("reSent").addEventListener("click", async function (event) {
            event.preventDefault();

            var email = document.getElementById("EmailInput1").value;

            // 顯示等待動畫
            showLoadingAnimation();

            try {
                const response = await fetch("https://localhost:7103/api/Members/reSent", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify({ email })
                });

                const data = await response.json();

                if (response.ok) {
                    if (data.message === "Done") {
                        alert("你的Email已經驗證過囉！ 不必再重新驗證～");
                    } else if (data.message === "NOMember") {
                        alert("你的Email尚沒註冊過，請點選加入新朋友進行註冊！");
                    } else 
                    {
                        // 隱藏等待動畫
                        hideLoadingAnimation();

                        alert("驗證信已經重新寄發至您的信箱，快去收信開通帳號！");
                    }
                } else {
                    alert(`發生錯誤: ${data.message || "無法重寄驗證信"}`);
                }
            } catch (error) {
                console.error("Error:", error);
                alert("發生錯誤，請稍後再試！");
            }
        });

        const togglePasswordIcon = document.getElementById('togglePasswordIcon');

        togglePasswordIcon.addEventListener('click', function () {
            const type = passwordInput.getAttribute('type') === 'password' ? 'text' : 'password';
            passwordInput.setAttribute('type', type);

            this.querySelector('i').classList.toggle('fa-eye');
            this.querySelector('i').classList.toggle('fa-eye-slash');
        });


        //快速填資訊Demo鍵

        //房客Demo鍵(通過驗證)
        const guestBtn = document.getElementById("guestBtn");

        guestBtn.addEventListener('click', (evt) => {
            evt.preventDefault();

            document.querySelector('#EmailInput1').value = "rubyserendipity75@gmail.com";
            document.querySelector('#PasswordInput1').value = "Qqq123456!!"; //註冊密碼用Qqq123456!!，更改密碼用Aaa123456!!，重設密碼用Zzz123456!!
            queryEmail();
        });

        //房客Demo鍵(未驗證)
        const forbidBtn = document.getElementById("forbidBtn");

        forbidBtn.addEventListener('click', (evt) => {
            evt.preventDefault();

            document.querySelector('#EmailInput1').value = "rubyccww@@gmail.com"
            document.querySelector('#PasswordInput1').value = "No123456@@";
            queryEmail();
        });

        //管理員Demo鍵
        const adminBtn = document.getElementById("adminBtn");

        adminBtn.addEventListener('click', (evt) => {
            evt.preventDefault();

            document.querySelector('#EmailInput1').value = "管理員email"
            document.querySelector('#PasswordInput1').value = "管理員密碼";
            queryEmail();
        });

        //房東Demo鍵

        const hostBtn = document.getElementById("hostBtn");

        hostBtn.addEventListener('click', (evt) => {
            evt.preventDefault();

            document.querySelector('#EmailInput1').value = "房東email"
            document.querySelector('#PasswordInput1').value = "房東密碼";
            queryEmail();
        });

    </script>
}
