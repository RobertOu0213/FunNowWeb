@using System.Text.Json

@{
    Layout = "_Layout";

    var memberID = Context.Session.GetString("MemberID");

    var googleMemberId = Context.Session.GetString("GoogleMemberID");
    var googleMemberFirstName = Context.Session.GetString("GoogleMemberFirstName");
    var googleMemberEmail = Context.Session.GetString("GoogleMemberEmail");

}


<meta charset="utf-8" />


<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" crossorigin="anonymous"></script>
<script src="https://kit.fontawesome.com/091893cea4.js" crossorigin="anonymous"></script>



<body>

    <!--============================主要內容=========================================-->
    <div class="container justify-content-center align-items-center" style="margin-top:50px;">
        <div class="content-wrapper">
            <!--============================側邊導航欄=========================================-->
            <div class="sidebar">
                <ul>
                    <li><a href="#" class="fa-solid fa-calendar-days" alt="管理訂單"><span>管理訂單</span></a></li>
                    <li><a href="#" class="fa-solid fa-building" alt="住宿"><span>住宿</span></a></li>
                    <li><a href="#" class="fa-solid fa-comment-dots" alt="住宿訊息"><span>住宿訊息</span></a></li>
                    <li><a href="#" class="fa-solid fa-star" alt="住宿評鑑"><span>住宿評鑑</span></a></li>
                    <li><a href="/Member/MemberInformation" class="fa-solid fa-user" alt="個人資料"><span>個人資料</span></a></li>
                </ul>
            </div>
            <!--============================表單內容=========================================-->
            <div class="content">
                <div class="content-header">
                    <h4>用戶詳細資料</h4>
                </div>

                <div class="main-content">

                    <div class="card mb-3 ms-3 " style="background-image: linear-gradient(to right, #028bf7, #bee1f7); display: block;" id="showName">
                        <div class="card-body " style="padding-bottom: 0px; display: flex; align-items: center;  ">

                            <img class="profileImg" src="https://cdn2.ettoday.net/images/1457/d1457772.jpg" style="margin-right: 30px;" />
                            <div style="width:650px">
                                <h5 class="card-label mb-3">英文姓名</h5>
                                <div class="row">
                                    <p class="card-textt col-8"><span id="memberName"></span></p>
                                    <button class="edit col-3 " style="padding-left:100px;background-color:transparent;" id="NameEditBtn">編輯</button>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="card mb-3 ms-3 " id="editName" style="display: none;">
                        <div class="card-body " style="padding-bottom: 0px; display: flex; align-items: center;  ">
                            <div style="width:650px; padding-left:10px">
                                <div class="mb-3">
                                    <label for="FirstNameInput" class="form-label" style="font-size:15px">護照英文名</label>
                                    <input type="text" class="form-control" id="FirstNameInput" name="FirstName" placeholder="護照英文名" style="width:400px">
                                    <p id="firstNameError" class="form-text text-danger" style="display: none;">請輸入有效的名字，，限英文，不得為特殊符號或中文</p>
                                </div>

                                <div class="mb-3">
                                    <label for="LastNameInput" class="form-label" style="font-size:15px">護照英文姓</label>
                                    <input type="text" class="form-control" id="LastNameInput" name="LastName" placeholder="護照英文姓" style="width:400px">
                                    <p id="lastNameError" class="form-text text-danger" style="display: none;">請輸入有效的姓氏，限英文，不得為特殊符號或中文</p>
                                </div>
                                <button class="btn btn-outline-primary" style="width:150px; margin-right:10px" id="NameCancel">取消</button>
                                <button class="btn btn-primary " style="width:150px;" id="NameSave">儲存</button>
                            </div>
                        </div>
                    </div>

                    <div class="card mb-3 ms-3" >
                        <div class="card-body" style="padding-bottom: 10px;">
                            <h5 class="card-label mb-3">電子郵件</h5>
                            <span class="card-textt"><span id="memberEmail"></span></span>
                            <label class="verify">已通過驗證</label>
                        </div>
                    </div>


                    <div class="card mb-3 ms-3" id="showPhone">
                        <div class="card-body" style="padding-bottom: 0px;">
                            <h5 class="card-label mb-3">電話號碼</h5>
                            <div class="row">
                                <p class="card-textt col-9"><span id="memberPhone"></span></p>
                                <button class="edit col-2" id="PhoneEditBtn" style="margin-left:40px;">編輯</button>
                            </div>
                        </div>
                    </div>
                    <div class="card mb-3 ms-3 " id="editPhone" style="display: none;" >
                        <div class="card-body " style="padding-bottom: 0px; display: flex; align-items: center;  ">
                            <div style="width:650px; padding-left:10px">
                                <div class="mb-3">
                                    <label for="PhoneInput" class="form-label" style="font-size:15px">手機號碼</label>
                                    <input type="text" class="form-control" id="PhoneInput" name="Phone" placeholder="手機號碼" style="width:400px">
                                    <p id="phoneError" class="form-text text-danger" style="display: none;">請輸入有效的手機號碼格式</p>
                                </div>
                                <button class="btn btn-outline-primary" style="width:150px; margin-right:10px" id="PhoneCancel">取消</button>
                                <button class="btn btn-primary " style="width:150px;" id="PhoneSave">儲存</button>
                            </div>
                        </div>
                    </div>


                    <div class="card  mb-3 ms-3" id="showPwd" style="display:block;">
                        <div class="card-body" style="padding-bottom: 0px;">
                            <h5 class="card-label mb-3">密碼</h5>
                            <div class="row">
                                <p class="card-textt col-9"><span id="memberPwd"></span></p>
                                <button class="edit col-2" id="PwdEditBtn" style="margin-left:40px;">編輯</button>
                            </div>
                        </div>
                    </div>
                    <div class="card mb-3 ms-3 " id="editPwd" style="display: none;">
                        <div class="card-body " style="padding-bottom: 0px; display: flex; align-items: center; ">
                            <div style="width:650px; padding-left:10px">
                                <div class="mb-3" id="originPwd">
                                    <label for="PasswordInput1" class="form-label" style="font-size:15px">請先輸入原密碼</label>
                                    <div class="input-group">
                                        <input type="password" class="form-control" id="PasswordInput1" name="Password" placeholder="密碼" style="border-right:none;">
                                        <span class="input-group-text" id="togglePasswordIcon1" style="background-color:white; border-left:none;">
                                            <i class="fa-solid fa-eye-slash"></i>
                                        </span>
                                    </div>
                                    <button class="btn btn-outline-primary" style="width:150px; margin:15px 15px 5px 0px" id="OriginalPwdNo">取消</button>
                                    <button class="btn btn-primary" style="width:150px; margin:15px 0px 5px 0px " id="OriginalPwdOK">送出</button>
                                    
                                </div>
                                <p class="form-text text-danger" id="originalError"></p>

                                <div class="mb-3" id="SetNewPwd" style="display: none;">
                                    <div class="mb-3">
                                        <label for="NewPasswordInput" class="form-label" style="font-size:15px">請輸入欲設置的新密碼</label>
                                        <div class="input-group">
                                            <input type="password" class="form-control" id="NewPasswordInput" name="Password" placeholder="密碼" style="border-right:none;">
                                            <span class="input-group-text" id="togglePasswordIcon" style="background-color:white; border-left:none;">
                                                <i class="fa-solid fa-eye-slash"></i>
                                            </span>
                                        </div>
                                        <p id="passwordError" class="form-text text-danger" style="display: none;">請輸入有效的密碼。</p>
                                    </div>
                                    <div class="mb-3">
                                        <label for="NewRecheckPasswordInput" class="form-label" style="font-size:15px">請再次輸入欲設置的新密碼</label>
                                        <div class="input-group">
                                            <input type="password" class="form-control" id="NewRecheckPasswordInput" placeholder="確認密碼" style="border-right:none;">
                                            <span class="input-group-text" id="toggleRecheckPasswordIcon" style="background-color:white; border-left:none;">
                                                <i class="fa-solid fa-eye-slash"></i>
                                            </span>
                                        </div>
                                        <p id="recheckpasswordError" class="form-text text-danger" style="display: none;">該欄位不得為空白</p>
                                        <p id="passwordMismatchError" class="form-text text-danger" style="display: none;">兩次密碼輸入不同，請再次確認</p>
                                    </div>
                                    <button class="btn btn-outline-primary" style="width:150px; margin-right:10px" id="PwdCancel">取消</button>
                                    <button class="btn btn-primary " style="width:150px;" id="PwdSave">儲存</button>
                                </div>
                                
                            </div>
                        </div>
                    </div>

                </div>

                <div class="content-header" style="margin-top:50px;">
                    <h4>付款方式</h4>
                </div>

                <div class="card mb-3 ms-3">
                    <div class="card-body" style="padding-bottom: 0px; height: 85px;">
                        <div class="row">
                            <h5 class="card-label col-9" style="margin-top:25px;">幫我儲存信用卡的資料</h5>
                            <div class="form-check form-switch col-2" style="margin-top:25px; padding-left:80px">
                                <input class="form-check-input" type="checkbox" id="flexSwitchCheck1" onchange="toggleLabel(this)">
                                <label class="form-check-label" for="flexSwitchCheck1">不要</label>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="content-header" style="margin-top:50px;">
                    <h4>訂閱電子郵件</h4>
                </div>

                <div class="card mb-3 ms-3">
                    <div class="card-body" style="padding-bottom:0px; height: 100px;">
                        <h5 class="card-label mb-3">FunNow咖快報</h5>
                        <div class="form-check form-check-inline">
                            <input class="form-check-input" type="radio" name="inlineRadioOptions" id="inlineRadio1" value="option1" style="margin-left:0">
                            <label class="form-check-label" for="inlineRadio1" style="margin-right: 30px;">每天都想看</label>
                        </div>
                        <div class="form-check form-check-inline">
                            <input class="form-check-input" type="radio" name="inlineRadioOptions" id="inlineRadio2" value="option2">
                            <label class="form-check-label" for="inlineRadio2" style="margin-right: 30px">一週兩次差不多</label>
                        </div>
                        <div class="form-check form-check-inline">
                            <input class="form-check-input" type="radio" name="inlineRadioOptions" id="inlineRadio3" value="option3">
                            <label class="form-check-label" for="inlineRadio3" style="margin-right: 30px">每週一次剛剛好</label>
                        </div>
                        <div class="form-check form-check-inline">
                            <input class="form-check-input" type="radio" name="inlineRadioOptions" id="inlineRadio4" value="option4">
                            <label class="form-check-label" for="inlineRadio4">永遠不要</label>
                        </div>

                    </div>
                </div>

                <div class="card mb-3 ms-3">
                    <div class="card-body" style="padding-bottom: 0px; height: 85px;">
                        <div class="row">
                            <h5 class="card-label col-9" style="margin-top:25px;">我希望預訂小幫手能提醒我重要消息</h5>
                            <div class="form-check form-switch col-2" style="margin-top:25px; padding-left:80px">
                                <input class="form-check-input" type="checkbox" id="flexSwitchCheck2" onchange="toggleLabel(this)">
                                <label class="form-check-label" for="flexSwitchCheck2">不要</label>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="card mb-3 ms-3">
                    <div class="card-body" style="padding-bottom: 0px; height: 85px;">
                        <div class="row">
                            <h5 class="card-label col-9" style="margin-top:25px;">我想要收到FunNow的促銷情報</h5>
                            <div class="form-check form-switch col-2" style="margin-top:25px; padding-left:80px">
                                <input class="form-check-input" type="checkbox" id="flexSwitchCheck3" onchange="toggleLabel(this)">
                                <label class="form-check-label" for="flexSwitchCheck3">不要</label>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="card mb-3 ms-3">
                    <div class="card-body" style="padding-bottom: 0px; height: 85px;">
                        <div class="row">
                            <h5 class="card-label col-9" style="margin-top:25px;">我想獲得與我未來行程有關的資訊和特惠活動</h5>
                            <div class="form-check form-switch col-2" style="margin-top:25px; padding-left:80px">
                                <input class="form-check-input" type="checkbox" id="flexSwitchCheck4" onchange="toggleLabel(this)">
                                <label class="form-check-label" for="flexSwitchCheck4">不要</label>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="card mb-3 ms-3" style="background-color: #f9f9f9;margin-top:80px">
                    <div class="card-body " style="padding-bottom: 0px; height: 75px; ">
                        <button class="delete" id="delete">刪除我的帳戶</button>
                    </div>

                </div>


            </div> <!--表單內容的結尾-->


        </div> <!--container的結尾-->


    </div>
    <!--============================頁尾=========================================-->

    <div id="FOOTER">
    </div>


</body>




@section Styles
{
    <style>
        #FOOTER {
            clear: both; /* 當上方的內容使用 float 時，下方的 <div> 會產生重疊上去的問題 */
            /* 寫 clear:both; 解除浮動就可以解決這個問題 */

            margin: 0;
            height: 121px;
            background-color: #2A2A2E;
        }

        .profileImg {
            width: 80px;
            height: 80px;
            border-radius: 50%;
            margin: 15px 10px 15px 10px;
        }


        /* 設定整個網頁的字體、間距和背景顏色 */
        body {
            font-family: Arial, sans-serif; /* 使用Arial字體 */
            margin: 0; /* 移除預設的外邊距 */
            padding: 0; /* 移除預設的內邊距 */
            background-color: #f4f4f4; /* 設定網頁背景顏色 */
        }

        /* 設定頁面頂部的導航欄樣式 */
        .header {
            background-color: #fff; /* 設定背景為白色 */
            padding: 10px 20px; /* 設定上下內邊距為10px，左右內邊距為20px */
            display: flex; /* 使用彈性盒子布局 */
            justify-content: space-between; /* 讓子元素在主軸方向上兩端對齊 */
            align-items: center; /* 垂直居中對齊子元素 */
            box-shadow: 0 2px 5px rgba(0,0,0,0.1); /* 添加陰影效果 */
        }

            /* 設定標誌區域的樣式 */
            .header .logo {
                display: flex; /* 使用彈性盒子布局 */
                align-items: center; /* 垂直居中對齊子元素 */
            }

                /* 設定標誌圖像的樣式 */
                .header .logo img {
                    height: 40px; /* 設定圖片高度為40px */
                    margin-right: 10px; /* 設定右側外邊距為10px */
                }

            /* 設定導航鏈接區域的樣式 */
            .header .nav-links {
                display: flex; /* 使用彈性盒子布局 */
                align-items: center; /* 垂直居中對齊子元素 */
            }

                /* 設定導航鏈接的樣式 */
                .header .nav-links a {
                    margin-left: 20px; /* 設定左側外邊距為20px */
                    text-decoration: none; /* 移除鏈接的下劃線 */
                    color: #333; /* 設定文本顏色為深灰色 */
                }

                    /* 設定導航鏈接在懸停時的樣式 */
                    .header .nav-links a:hover {
                        color: #007bff; /* 設定文本顏色為藍色 */
                    }

        /* 設定頁面內容區域的樣式 */
        .container {
            display: flex; /* 使用彈性盒子布局 */
            justify-content: center; /* 在主軸方向上居中對齊子元素 */
            padding: 20px; /* 設定內邊距為20px */
        }

        /* 設定內容包裹區域的樣式 */
        .content-wrapper {
            width: 1300px; /* 設定寬度為1200px */
            display: flex; /* 使用彈性盒子布局 */
            margin-left: 100px;
            min-width: 500px;
            max-width: 1300px;
        }

        /* 設定側邊欄的樣式 */
        .sidebar {
            width: 250px; /* 設定寬度為250px */
            background-color: #fff; /* 設定背景為白色 */
            box-shadow: 2px 0 5px rgba(0,0,0,0.1); /* 添加陰影效果 */
            height: calc(800px); /* 設定高度為視窗高度減去60px */
            padding-top: 20px; /* 設定頂部內邊距為20px */

            border-radius: 10px;
        }

            /* 設定側邊欄中的列表樣式 */
            .sidebar ul {
                list-style-type: none; /* 移除列表項的樣式 */
                padding: 0; /* 移除內邊距 */
            }

                /* 設定側邊欄中的每個列表項樣式 */
                .sidebar ul li {
                    padding: 15px 20px; /* 設定內邊距 */
                    border-bottom: 1px solid #eee; /* 添加底部邊框 */
                    border-radius: 10px;
                }

                    /* 設定側邊欄中的每個列表項在懸停時的樣式 */
                    .sidebar ul li:hover {
                        background-color: #eff4fd; /* 設定背景顏色 */
                    }

                    /* 設定側邊欄中的鏈接樣式 */
                    .sidebar ul li a {
                        text-decoration: none; /* 移除鏈接的下劃線 */
                        color: #333; /* 設定文本顏色為深灰色 */
                        display: flex; /* 使用彈性盒子布局 */
                        align-items: center; /* 垂直居中對齊子元素 */
                    }

                        .sidebar ul li a:hover {
                            color: #3170e7;
                        }

                        /* 設定側邊欄中的鏈接圖像樣式 */
                        .sidebar ul li a img {
                            margin-right: 10px; /* 設定右側外邊距為10px */
                        }

        /* 設定主內容區域的樣式 */
        .content {
            margin-left: 20px; /* 設定左側外邊距為270px，為了給側邊欄留出空間 */
            padding: 5px 20px 20px 20px; /* 設定內邊距 */
            background-color: #f4f4f4; /* 設定背景為白色 */
            flex: 1; /* 允許內容區域自動調整大小 */
            /*box-shadow: 0 0 10px rgba(0,0,0,0.1);*/ /* 添加陰影效果 */
            /*border-radius: 10px;*/ /* 設定邊框圓角 */
        }

        /* 設定主內容區域標題的樣式: 用戶詳細資料 */
        .content-header {
            display: flex; /* 使用彈性盒子布局 */
            justify-content: space-between; /* 在主軸方向上兩端對齊子元素 */
            align-items: center; /* 垂直居中對齊子元素 */
            margin: 30px 10px 10px 10px;
        }
            /* 設定操作區域的樣式 */
            .content-header .actions {
                display: flex; /* 使用彈性盒子布局 */
                align-items: center; /* 垂直居中對齊子元素 */
            }

        .card {
            box-shadow: 0 0 10px rgba(0,0,0,0.1); /* 添加陰影效果 */
            padding-bottom: 10px;
            border: none;
            width: 780px;
        }

            .card:hover {
                box-shadow: 0 10px 10px rgba(0,0,0,0.2); /* 添加陰影效果 */
            }

        .verify /*已通過驗證標籤*/ {
            margin: 0 5px 0 5px;
            background-color: #4CC5D3;
            box-shadow: 0 0 5px rgba(0,0,0,0.1);
            border-radius: 5px;
            color: white;
            font-size: 12px;
            padding: 3px;
        }

        .edit /*編輯按鈕*/ {
            color: #0285DF;
            border: none;
            background-color: white;
            font-weight: 800;
            padding: 0px 0px 15px 80px;
        }

        .card-label {
            font-size: 16px;
            font-weight: 800;
            margin: 10px 0 0 10px;
        }

        .card-textt {
            letter-spacing: 1px;
            margin-left: 10px;
            color:black;
        }

        input[type="radio"] {
            margin-right: 8px;
        }

        .delete {
            margin-top: 18px;
            color: blue;
            font-size: 16px;
            font-weight: 400;
            border: none;
            background-color:transparent;
        }

            .delete:hover {
                text-decoration: underline;
            }


        /* 為文本添加樣式 */
        a span {
            margin-left: 10px; /* 為了與圖示之間添加一些間距 */
            font-family: 'Microsoft JhengHei', sans-serif;
            font-size: 16px; /* 修改为您希望的字体大小 */
        }

    </style>
}


@section Scripts
{
       
    <script>

       //【一開始載入的時候出現會員資料】
        document.addEventListener("DOMContentLoaded", function () {

            var googleMemberFirstName = '@googleMemberFirstName';
            var googleMemberEmail = '@googleMemberEmail';
            var googleMemberId = '@googleMemberId';
            var memberID = '@memberID';

            var memberNameElement = document.getElementById("memberName");
            var memberEmailElement = document.getElementById("memberEmail");
            var memberPhoneElement = document.getElementById("memberPhone");
            var memberPwdElement = document.getElementById("memberPwd");
            var pwdCardElement = document.getElementById("showPwd");
            var nameEditBtnElement = document.getElementById("NameEditBtn");

            // 如果都沒有值，顯示未登入，基本上不會用到
            if (!googleMemberId && !googleMemberFirstName && !memberID) 
            {
                // 其他情況，如未登入或資料缺失
                if (memberNameElement) memberNameElement.innerText = "尚未登入無法取得會員資料";
                if (memberEmailElement) memberEmailElement.innerText = "尚未登入無法取得會員資料";
                if (memberPhoneElement) memberPhoneElement.innerText = "尚未登入無法取得會員資料";
                if (memberPwdElement) memberPwdElement.innerText = "尚未登入無法取得會員資料";

            }
            // 判斷若有googlememberID，顯示googlemember內容
            else if (googleMemberId && googleMemberFirstName) 
            {
                if (memberNameElement) memberNameElement.innerText = googleMemberFirstName;
                if (memberEmailElement) memberEmailElement.innerText = googleMemberEmail;
                if (memberPhoneElement) memberPhoneElement.innerText = "使用第三方登入者尚未設定手機號碼";
                if (pwdCardElement) pwdCardElement.style.display = "none";
                if (nameEditBtnElement) {
                    nameEditBtnElement.innerText = "";
                    nameEditBtnElement.disabled = true;
                }
                console.log("這是會員查詢資料:Google登入" + googleMemberId + googleMemberFirstName);
            }
            // 若以上都沒有才顯示member內容
            else if (memberID) 
            {
                fetchMemberData(memberID);
            }

        });
        async function fetchMemberData(memberID) {
            try {
                const response = await fetch(`https://localhost:7103/api/Members/searchByID?ID=${memberID}`, {
                    method: 'GET',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                });
                if (response.ok) {
                    const data = await response.json(); // 將回應內容解析為 JSON

                    if (data.password) {
                        var memberPwd = data.password;
                        var lengthmemberPwd = memberPwd.length;
                        // 根據原本字串長度生成相同數量的●
                        var maskedPwd = "●".repeat(lengthmemberPwd);
                        if (document.getElementById("memberPwd")) {
                            document.getElementById("memberPwd").innerText = maskedPwd;
                        }
                    }

                    if (document.getElementById("memberName")) {
                        document.getElementById("memberName").innerText = `${data.firstName}\xa0${data.lastName}`;
                    }
                    if (document.getElementById("memberEmail")) {
                        document.getElementById("memberEmail").innerText = data.email;
                    }
                    if (document.getElementById("memberPhone")) {
                        document.getElementById("memberPhone").innerText = data.phone;
                    }
                    console.log("這是會員查詢資料:一般登入" + memberID + data.firstName);
                } else {
                    const errorText = await response.text();
                    console.error('查詢失敗:', errorText);
                    alert('查詢失敗，請稍後再試');
                }
            } catch (error) {
                console.error('發生錯誤:', error);
                alert(`發生錯誤，請稍後再試。錯誤信息: ${error.message}`);
            }
        }

     // ===================================================================================================      
            
           //【按下姓名編輯鈕】
           document.getElementById("NameEditBtn").addEventListener('click', async (evt) => {
            evt.preventDefault(); //防止預設行為的發生
            document.getElementById("showName").style.display = "none";
            document.getElementById("editName").style.display = "block";
            document.getElementById("FirstNameInput").value = "";
            document.getElementById("LastNameInput").value = "";
           }); 

           //【按下姓名取消鈕】
            document.getElementById("NameCancel").addEventListener('click', async (evt) => {
            evt.preventDefault(); //防止預設行為的發生
            document.getElementById("showName").style.display = "block";
            document.getElementById("editName").style.display = "none";
            document.getElementById("FirstNameInput").value = "";
            document.getElementById("LastNameInput").value = "";
           });


        // 進行欄位驗證
        // 驗證輸入的值只能包含英文字
        function isValidName(name) {
            var regex = /^[A-Za-z]+$/;
            return regex.test(name);
        }

        // 驗證 FirstNameInput 欄位
        document.getElementById("FirstNameInput").addEventListener("blur", function () {
            var input = this.value.trim();
            var error = document.getElementById("firstNameError");
            if (input === "") {
                error.textContent = "該欄位不得為空白";
                error.style.display = "block";
                this.classList.add("border", "border-danger");
            } else if (!isValidName(input)) {
                error.textContent = "請輸入有效的名字，限英文，不得為特殊符號或中文";
                error.style.display = "block";
                this.classList.add("border", "border-danger");
            } else {
                error.style.display = "none";
                this.classList.remove("border", "border-danger");
            }

        });

        // 驗證 LastNameInput 欄位
        document.getElementById("LastNameInput").addEventListener("blur", function () {
            var input = this.value.trim();
            var error = document.getElementById("lastNameError");
            if (input === "") {
                error.textContent = "該欄位不得為空白";
                error.style.display = "block";
                this.classList.add("border", "border-danger");
            } else if (!isValidName(input)) {
                error.textContent = "請輸入有效的姓氏，限英文，不得為特殊符號或中文";
                error.style.display = "block";
                this.classList.add("border", "border-danger");
            } else {
                error.style.display = "none";
                this.classList.remove("border", "border-danger");
            }

        });


           //【按下姓名儲存鈕】
            document.getElementById("NameSave").addEventListener('click', async (evt) => {
            evt.preventDefault(); //防止預設行為的發生
            
           
            // 1.檢查是不是有紅框錯誤
            const redBorderElements = document.querySelectorAll('.border-danger');
            if (redBorderElements.length > 0) {
               
                return;
            }
            
            //2.串接API，修正姓名進資料庫
                const newFirstName = document.getElementById("FirstNameInput").value;
                const newLastName = document.getElementById("LastNameInput").value;
                var memberID = '@memberID';
                var googleMemberId = '@googleMemberId';

                 let LoginmemberID;
                if (memberID) 
                {
                LoginmemberID = memberID;
                } else 
                {
                LoginmemberID = googleMemberId;
                }
                
             try {
                const response = await fetch(`https://localhost:7103/api/Members/${LoginmemberID}`, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ FirstName: newFirstName, LastName: newLastName })
                });

                if (response.ok) 
                {
                    document.getElementById("showName").style.display = "block";
                    document.getElementById("editName").style.display = "none";
                    document.getElementById("FirstNameInput").value = "";
                    document.getElementById("LastNameInput").value = "";

                } else 
                {
                    const errorText = await response.text();
                    console.error('更新姓名失敗:', errorText);
                }
            } catch (error) {
                console.error('發生錯誤:', error);
                alert(`發生錯誤，請稍後再試。錯誤信息: ${error.message}`);;
            }

            //4. 重整畫面
            fetchMemberData(LoginmemberID);
           
        });

        // ===================================================================================================
        //【按下電話編輯鈕】
        document.getElementById("PhoneEditBtn").addEventListener('click', async (evt) => {
            evt.preventDefault(); //防止預設行為的發生
            const showPhone = document.getElementById("showPhone");
            const editPhone = document.getElementById("editPhone");
            const phoneInput = document.getElementById("PhoneInput");
            if (showPhone && editPhone) 
            {
                showPhone.style.display = "none";
                editPhone.style.display = "block";
                phoneInput.value = "";
            }
        });

        //【按下電話取消鈕】
        document.getElementById("PhoneCancel").addEventListener('click', async (evt) => {
            evt.preventDefault(); //防止預設行為的發生
            const showPhone = document.getElementById("showPhone");
            const editPhone = document.getElementById("editPhone");
            const phoneInput = document.getElementById("PhoneInput");

            if (showPhone && editPhone) {
                showPhone.style.display = "block";
                editPhone.style.display = "none";
                phoneInput.value = "";
            }
        });


        // 驗證輸入的值是否為有效的手機號碼格式
        function isValidPhone(phone) {
            var regex = /^09\d{8}$/; // 台灣手機號碼格式為 "09xxxxxxxx"
            return regex.test(phone);
        }

        // 監聽 PhoneInput 欄位的 blur 事件
        const phoneInput = document.getElementById("PhoneInput");
        const phoneError = document.getElementById("phoneError");

        phoneInput.addEventListener("blur", function () {
            var input = this.value.trim();
            if (input === "") {
                phoneError.style.display = "none";
                this.classList.remove("border", "border-danger");
            } else if (!isValidPhone(input)) {
                phoneError.style.display = "block";
                this.classList.add("border", "border-danger");
            } else {
                phoneError.style.display = "none";
                this.classList.remove("border", "border-danger");
            }
        });
        
        
        //【按下電話儲存鈕】
        document.getElementById("PhoneSave").addEventListener('click', async (evt) => {
            evt.preventDefault(); //防止預設行為的發生

            // 檢查是否有錯誤
            if (phoneInput.classList.contains("border-danger")) {
                return; // 有錯誤就不繼續執行
            }

            //3.串接API，修正電話進資料庫
            const newPhone = document.getElementById("PhoneInput").value;
            var memberID = '@memberID';
            var googleMemberId = '@googleMemberId';

            let LoginmemberID;
            if (memberID) {
                LoginmemberID = memberID;
            } else {
                LoginmemberID = googleMemberId;
            }

            try {
                const response = await fetch(`https://localhost:7103/api/Edit/${LoginmemberID}`, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ phone: newPhone})
                });

                if (response.ok) {
                    const showPhone = document.getElementById("showPhone");
                    const editPhone = document.getElementById("editPhone");
                    const phoneInput = document.getElementById("PhoneInput");
                    if (showPhone && editPhone) 
                    {
                        showPhone.style.display = "block";
                        editPhone.style.display = "none";
                        phoneInput.value = "";
                    }
                } else 
                {
                    const errorText = await response.text();
                    console.error('更新電話失敗:', errorText);
                    alert("電話修改失敗，請稍後再試!");
                }
            } catch (error) {
                console.error('發生錯誤:', error);
                alert(`發生錯誤，請稍後再試。錯誤信息: ${error.message}`);;
            }

            //4. 重整畫面
            fetchMemberData(LoginmemberID);

        });

        // ===================================================================================================
        //【按下密碼編輯鈕】
        document.getElementById("PwdEditBtn").addEventListener('click', async (evt) => {
            evt.preventDefault(); //防止預設行為的發生
            const showPwd = document.getElementById("showPwd");
            const editPwd = document.getElementById("editPwd");
            if (showPwd && editPwd) {
                showPwd.style.display = "none";
                editPwd.style.display = "block";
            }
        });

        //【按下原密碼送出鈕】
         document.getElementById("OriginalPwdOK").addEventListener("click", async function (event) {
            event.preventDefault();
            
            //串接API，比對密碼是否相同
            const originalPwd = document.getElementById("PasswordInput1").value;
            var memberID = '@memberID';
            var googleMemberId = '@googleMemberId';

            let LoginmemberID;
            if (memberID) {
                LoginmemberID = memberID;
            } else {
                LoginmemberID = googleMemberId;
            }

            try {
                const response = await fetch(`https://localhost:7103/api/Edit/CheckPassword`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ memberID: memberID, password: originalPwd })
                });

                if (response.ok) {
                    const setNewPwd = document.getElementById("SetNewPwd");

                    if (setNewPwd) 
                    {
                        setNewPwd.style.display = "block";
                        const originalError = document.getElementById("originalError");
                        if (originalError) originalError.innerText = "密碼輸入正確";
                    }
                } else 
                {
                    const originalError = document.getElementById("originalError");
                    if (originalError) originalError.innerText = "密碼輸入錯誤，請再次確認";
                    const errorText = await response.text();
                    console.error('密碼輸入錯誤:', errorText);
                      
                }
            } catch (error) {
                console.error('發生錯誤:', error);
                alert(`發生錯誤，請稍後再試。錯誤信息: ${error.message}`);;
            }

        });

        //【按下原密碼取消鈕】
        document.getElementById("OriginalPwdNo").addEventListener('click', async (evt) => {
            evt.preventDefault(); //防止預設行為的發生
            const showPwd = document.getElementById("showPwd");
            const editPwd = document.getElementById("editPwd");
            
            if (showPwd && editPwd) {
                showPwd.style.display = "block";
                editPwd.style.display = "none";
            }
        });


        //【按下新密碼取消鈕】
        document.getElementById("PwdCancel").addEventListener('click', async (evt) => {
            evt.preventDefault(); //防止預設行為的發生
            const showPwd = document.getElementById("showPwd");
            const editPwd = document.getElementById("editPwd");
            const setNewPwd = document.getElementById("SetNewPwd");
            const originalPwd = document.getElementById("PasswordInput1");
            const originalError = document.getElementById("originalError");
            const NewPasswordInput = document.getElementById("NewPasswordInput");
            const NewRecheckPasswordInput = document.getElementById("NewRecheckPasswordInput");

            if (showPwd && editPwd && setNewPwd && originalPwd && originalError) {
                showPwd.style.display = "block";
                editPwd.style.display = "none";
                setNewPwd.style.display = "none";
                originalPwd.value = "";
                originalError.innerText = "";
                NewPasswordInput.value = "";
                NewRecheckPasswordInput.value = "";
            }
        });


        //新密碼欄位驗證
        document.getElementById("NewPasswordInput").addEventListener("blur", function () {
            var input = this.value.trim();
            var error = document.getElementById("passwordError");
            var passwordPattern = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@@$!%*?&])[A-Za-z\d@@$!%*?&]{6,}$/;

            if (input === "") {
                error.textContent = "密碼欄位不得為空白";
                error.style.display = "block";
                this.classList.add("border", "border-danger");
            } else if (!passwordPattern.test(input)) {
                error.textContent = "密碼至少6個字元，且需包含大小寫英文字母、數字、特殊符號";
                error.style.display = "block";
                this.classList.add("border", "border-danger");
            } else {
                error.style.display = "none";
                this.classList.remove("border", "border-danger");
            }

        });


        //新確認密碼欄位驗證
        document.getElementById("NewRecheckPasswordInput").addEventListener("blur", function () {
            var passwordInput = document.getElementById("NewPasswordInput").value.trim();
            var recheckPasswordInput = this.value.trim();
            var recheckPasswordError = document.getElementById("recheckpasswordError");
            var passwordMismatchError = document.getElementById("passwordMismatchError");

            if (recheckPasswordInput === "") {
                recheckPasswordError.style.display = "block";
                passwordMismatchError.style.display = "none";
                this.classList.add("border", "border-danger");
            } else {
                recheckPasswordError.style.display = "none";
                this.classList.remove("border", "border-danger");

                if (recheckPasswordInput !== passwordInput) {
                    passwordMismatchError.style.display = "block";
                    this.classList.add("border", "border-danger");
                } else {
                    passwordMismatchError.style.display = "none";
                    this.classList.remove("border", "border-danger");
                }
            }

        });


        //【按下新密碼儲存鈕】
        document.getElementById("PwdSave").addEventListener('click', async (evt) => {
            evt.preventDefault(); //防止預設行為的發生

            // 1.檢查是不是有紅框錯誤
            const redBorderElements = document.querySelectorAll('.border-danger');
            if (redBorderElements.length > 0) {
                return;
            }

            //2.串接API，修正密碼進資料庫
            var passwordInput = document.getElementById("NewPasswordInput").value;
            var memberID = '@memberID';
            var googleMemberId = '@googleMemberId';


            let LoginmemberID;
            if (memberID) {
                LoginmemberID = memberID;
            } else {
                LoginmemberID = googleMemberId;
            }

            try {
                const response = await fetch(`https://localhost:7103/api/Pwd/${LoginmemberID}`, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ password: passwordInput })
                });

                if (response.ok) 
                {
                    const showPwd = document.getElementById("showPwd");
                    const editPwd = document.getElementById("editPwd");
                    const setNewPwd = document.getElementById("SetNewPwd");
                    const originalPwd = document.getElementById("PasswordInput1");
                    const originalError = document.getElementById("originalError");

                    if (showPwd && editPwd) 
                    {
                        showPwd.style.display = "block";
                        editPwd.style.display = "none";
                        setNewPwd.style.display = "none";
                        originalPwd.value = "";
                        originalError.innerText = "";

                    }
                } else {
                    const errorText = await response.text();
                    console.error('更新密碼失敗:', errorText);
                    alert("密碼修改失敗，請稍後再試!");
                }
            } catch (error) {
                console.error('發生錯誤:', error);
                alert(`發生錯誤，請稍後再試。錯誤信息: ${error.message}`);;
            }

            //4. 重整畫面
            fetchMemberData(LoginmemberID);

        });

        // ===================================================================================================
        // 原密碼欄位眼睛開關
        const togglePasswordIcon1 = document.getElementById('togglePasswordIcon1');
        const passwordInput1 = document.getElementById('PasswordInput1');

        togglePasswordIcon1.addEventListener('click', function () {
            const type = passwordInput1.getAttribute('type') === 'password' ? 'text' : 'password';
            passwordInput1.setAttribute('type', type);
            this.querySelector('i').classList.toggle('fa-eye');
            this.querySelector('i').classList.toggle('fa-eye-slash');
        });
        

        // 新密碼欄位眼睛開關
        const togglePasswordIcon = document.getElementById('togglePasswordIcon');
        const passwordInput = document.getElementById('NewPasswordInput');

        togglePasswordIcon.addEventListener('click', function () {
            const type = passwordInput.getAttribute('type') === 'password' ? 'text' : 'password';
            passwordInput.setAttribute('type', type);
            this.querySelector('i').classList.toggle('fa-eye');
            this.querySelector('i').classList.toggle('fa-eye-slash');
        });


        // 確認密碼欄位眼睛開關
        const toggleRecheckPasswordIcon = document.getElementById('toggleRecheckPasswordIcon');
        const recheckPasswordInput = document.getElementById('NewRecheckPasswordInput');

        toggleRecheckPasswordIcon.addEventListener('click', function () {
            const type = recheckPasswordInput.getAttribute('type') === 'password' ? 'text' : 'password';
            recheckPasswordInput.setAttribute('type', type);
            this.querySelector('i').classList.toggle('fa-eye');
            this.querySelector('i').classList.toggle('fa-eye-slash');
        });

        
        function toggleLabel(checkbox) {
            const label = checkbox.nextElementSibling;
            label.textContent = checkbox.checked ? '要' : '不要';
        }

        //【按下刪除我的帳戶】
        document.getElementById("PwdSave").addEventListener('click', async (evt) => {
            evt.preventDefault(); //防止預設行為的發生

            //串接API，把資料庫的member刪除(角色轉為4)
            const newPhone = document.getElementById("PhoneInput").value;
            var memberID = '@memberID';
            var googleMemberId = '@googleMemberId';

            let LoginmemberID;
            if (memberID) {
                LoginmemberID = memberID;
            } else {
                LoginmemberID = googleMemberId;
            }

            try {
                const response = await fetch(`https://localhost:7103/api/DeleteMember/${LoginmemberID}`, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ phone: newPhone })
                });

                if (response.ok) 
                {
                    alert("帳號刪除成功");
                    window.location.href = "@Url.Action("Logout", "Member")";

                } else {
                    const errorText = await response.text();
                    console.error('刪除失敗:', errorText);
                    alert("刪除失敗，請稍後再試!");
                }
            } catch (error) {
                console.error('發生錯誤:', error);
                alert(`發生錯誤，請稍後再試。錯誤信息: ${error.message}`);;
            }

        };

    </script>
}