@{
    ViewData["Title"] = "Customerservice";
    var memberID = Context.Session.GetString("MemberID");
    var googleMemberId = Context.Session.GetString("GoogleMemberID");
    var displayMemberId = !string.IsNullOrEmpty(googleMemberId) ? googleMemberId : memberID;
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <title>FunNow 客服服務</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css" />
    <style>
        body {
            background-color: #f8f9fa;
            position: relative;
            font-family: 'Arial', sans-serif;
        }

        .chat-button {
            position: fixed;
            bottom: 20px;
            right: 20px;
            z-index: 1000;
        }

        .chat-window {
            position: fixed;
            bottom: 80px;
            right: 20px;
            width: 280px; /* 調整寬度 */
            max-width: 90%;
            border-radius: 10px;
            box-shadow: 0 0 15px rgba(0, 0, 0, 0.1);
            background-color: #fff;
            display: none;
            flex-direction: column;
            z-index: 1000;
        }

        .card-header {
            background-color: #343a40;
            color: #fff;
            border-top-left-radius: 10px;
            border-top-right-radius: 10px;
            padding: 10px 15px;
            text-align: center;
        }

        .chat-container {
            display: flex;
            flex-direction: column;
            height: 300px; /* 調整高度 */
            padding: 10px;
        }

        .chat-box {
            flex: 1;
            overflow-y: auto;
            border-top: 1px solid #ccc;
            padding: 10px;
            background-color: #fff;
        }

        .chat-input {
            border-top: 1px solid #ccc;
            padding: 10px;
            display: flex;
            align-items: center;
        }

            .chat-input input {
                flex: 1;
                padding: 10px;
                border: 1px solid #ccc;
                border-radius: 5px;
                margin-right: 10px;
                min-width: 0; /* 防止輸入框過大 */
            }

            .chat-input button {
                margin-left: 5px;
                padding: 8px 12px;
            }

        .fa-image {
            font-size: 20px;
            margin-right: 10px;
            color: #343a40;
            cursor: pointer;
        }

        .message {
            padding: 8px 12px;
            margin-bottom: 10px;
            border-radius: 10px;
            max-width: 80%;
            word-wrap: break-word;
            display: inline-block;
            white-space: nowrap;
        }

            .message .countdown {
                display: inline;
                white-space: nowrap;
            }

            .message.self {
                background-color: #d1ecf1;
                align-self: flex-end;
                text-align: right;
            }

            .message.other {
                background-color: #f8d7da;
                align-self: flex-start;
                text-align: left;
            }

        .list-group-item {
            border: none;
            padding: 5px 10px;
        }

    </style>
</head>
<body>
    <button id="needHelpBtn" class="btn btn-primary chat-button">需要客服嗎？</button>

    <div id="chatWindow" class="chat-window card">
        <div class="card-header">
            <h4 class="card-title">FunNow 客服服務</h4>
        </div>
        <div class="card-body chat-container">
            <div id="chatBox" class="chat-box">
                <ul class="list-group" id="Content"></ul>
            </div>
            <div class="chat-input">
                <input type="file" id="fileInput" style="display: none;">
                <i class="fa-regular fa-image" id="fileButton" style="width: 24px; height: 24px; cursor: pointer;"></i>
                <input type="text" id="message" placeholder="請輸入問題">
                <button type="button" class="btn btn-primary" id="sendButton">傳送</button>
            </div>
        </div>
    </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/3.1.18/signalr.min.js"></script>

    <script src="https://kit.fontawesome.com/091893cea4.js" crossorigin="anonymous"></script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/3.1.18/signalr.min.js"></script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            function showConnectingMessage() {
                const chatBox = document.getElementById("Content");
                const connectingMessage = document.createElement("li");
                connectingMessage.id = "connectingMessage";
                connectingMessage.className = "list-group-item animate__animated animate__fadeInUp message";
                connectingMessage.innerHTML = "與客服人員連線中請稍後... <span id='countdown' class='countdown'>30</span> 秒";
                chatBox.appendChild(connectingMessage);

                let countdown = 30;
                const countdownElement = document.getElementById("countdown");
                const intervalId = setInterval(() => {
                    countdown -= 1;
                    countdownElement.textContent = countdown;
                    if (countdown <= 0) {
                        clearInterval(intervalId);
                    }
                }, 1000);

                connectingMessage.dataset.intervalId = intervalId; // Save intervalId to message element
            }

            function hideConnectingMessage() {
                const connectingMessage = document.getElementById("connectingMessage");
                if (connectingMessage) {
                    clearInterval(connectingMessage.dataset.intervalId); // Clear the countdown interval
                    connectingMessage.remove();
                }
            }

            showConnectingMessage();

            var memberId = '@displayMemberId';

            function generateUniqueId() {
                return 'guest' + memberId + '_' + Math.random().toString(36).substr(2, 9);
            }

            const userId = generateUniqueId();
            const connection = new signalR.HubConnectionBuilder()
                .withUrl("https://localhost:7103/chatHub")  // 使用完整URL
                .build();

            connection.start()
                .then(() => {
                    console.log("Hub 連線完成");
                    return connection.invoke("RegisterUser", userId);
                })
                .then(() => {
                    console.log("用戶註冊成功");
                })
                .catch(err => {
                    console.error('連線錯誤: ', err);
                    alert('連線錯誤: ' + err.toString());
                    hideConnectingMessage(); // 隱藏「連線中」訊息
                });

            connection.on("UpdSelfID", function (id) {
                document.getElementById(memberId).textContent = id;
            });

            connection.on("UpdContent", function (msg) {
                const contentList = document.getElementById("Content");
                const listItem = document.createElement("li");
                listItem.className = "list-group-item animate__animated animate__fadeInUp message other";
                listItem.textContent = msg;
                contentList.appendChild(listItem);
                contentList.scrollTop = contentList.scrollHeight;
            });

            connection.on("ConfirmedConnection", function () {
                hideConnectingMessage(); // 隱藏「連線中」訊息
                const contentList = document.getElementById("Content");
                const listItem = document.createElement("li");
                listItem.className = "list-group-item animate__animated animate__fadeInUp message";
                listItem.textContent = "您已成功與客服人員連線";
                contentList.appendChild(listItem);
                contentList.scrollTop = contentList.scrollHeight;
            });

            connection.on("ReceiveFile", function (senderId, fileData, fileName) {
                const contentList = document.getElementById("Content");
                const listItem = document.createElement("li");
                listItem.className = senderId === userId ? "list-group-item animate__animated animate__fadeInUp message self" : "list-group-item animate__animated animate__fadeInUp message other";
                const link = document.createElement("a");
                link.href = `data:application/octet-stream;base64,${fileData}`;
                link.download = fileName;
                link.textContent = `文件: ${fileName}`;
                listItem.appendChild(link);
                contentList.appendChild(listItem);
                contentList.scrollTop = contentList.scrollHeight;
            });

            document.getElementById("sendButton").addEventListener("click", sendMessage);
            document.getElementById("fileInput").addEventListener("change", sendFile);
            document.getElementById("message").addEventListener("keydown", function (event) {
                if (event.key === "Enter") {
                    sendMessage();
                }
            });

            function sendMessage() {
                const messageInput = document.getElementById("message");
                const message = messageInput.value.trim();
                if (message) {
                    connection.invoke("SendMessage", userId, message, "客服人員").catch(err => {
                        console.error('發送錯誤: ' + err.toString());
                        alert('發送錯誤: ' + err.toString());
                    });

                    const contentList = document.getElementById("Content");
                    const listItem = document.createElement("li");
                    listItem.className = "list-group-item animate__animated animate__fadeInUp message self";
                    listItem.textContent = message;
                    contentList.appendChild(listItem);
                    contentList.scrollTop = contentList.scrollHeight;

                    messageInput.value = '';
                }
            }

            function sendFile(event) {
                const file = event.target.files[0];
                if (file) {
                    const reader = new FileReader();
                    reader.onload = function (e) {
                        const fileData = e.target.result.split(",")[1];
                        connection.invoke("SendFile", userId, fileData, file.name, "客服人員").catch(err => {
                            console.error('文件傳輸錯誤: ' + err.toString());
                            alert('文件傳輸錯誤: ' + err.toString());
                        });

                        const contentList = document.getElementById("Content");
                        const listItem = document.createElement("li");
                        listItem.className = "list-group-item animate__animated animate__fadeInUp message self";
                        const link = document.createElement("a");
                        link.href = URL.createObjectURL(file);
                        link.download = file.name;
                        link.textContent = `文件: ${file.name}`;
                        listItem.appendChild(link);
                        contentList.appendChild(listItem);
                        contentList.scrollTop = contentList.scrollHeight;
                    };
                    reader.readAsDataURL(file);
                }
            }

            document.getElementById("needHelpBtn").addEventListener("click", function () {
                document.getElementById("chatWindow").style.display = 'flex';
            });
        });

    </script>

</body>
</html>
