@{
    Layout = "_Layout";
    var memberID = Context.Session.GetString("MemberID");
    var googleMemberId = Context.Session.GetString("GoogleMemberID");
    var displayMemberId = !string.IsNullOrEmpty(googleMemberId) ? googleMemberId : memberID;
}
<!DOCTYPE html>
<html lang="zh-Hant">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>範例頁面</title>
    <link rel="stylesheet" href="/Ting/css/OrderManagement.css">
</head>
<body>
    <br />
    <br />
    <br />
    <br />
    <div class="container">
        <div class="content-wrapper">
            <div class="sidebar">
                <ul>
                    <li><a href="/OrderManagement/Index" class="fa-solid fa-calendar-days" alt="管理訂單"><span>管理訂單</span></a></li>
                    <li><a href="/Home/Index2" class="fa-solid fa-building" alt="住宿"><span>尋找住宿</span></a></li>
                    <li><a href="/OrderManagement/HotelMessenge" class="fa-solid fa-comment-dots" alt="住宿訊息"><span>住宿訊息</span></a></li>
                    <li><a href="/Comment/Angular_membercomment" class="fa-solid fa-star" alt="住宿評鑑"><span>住宿評鑑</span></a></li>
                    <li><a href="/Member/MemberInformation" class="fa-solid fa-user" alt="個人資料"><span>個人資料</span></a></li>
                </ul>
            </div>
            <div class="content">
                <div class="content-header">
                    <h2>所有訂單</h2>
                    <div class="actions">
                        <input type="text" placeholder="以訂單編號搜尋">
                    </div>
                </div>
                <div class="tabs">
                    <div class="tab__link active" id="ongoingTab">未來式</div>
                    <div class="tab__link" id="completedTab">過去式</div>
                    <div class="tab__link" id="cancelledTab">已取消</div>
                </div>
                <div class="main-content" id="tabContent">
                </div>
                <div class="pagination" id="pagination"></div>
                <div>
                    <br />
                    <br />
                    <br />
                    <br />
                    <br />
                    <br />
                    <br />
                    <br />
                    <br />
                    <br />
                </div>
            </div>
        </div>
    </div>
    <script src="https://kit.fontawesome.com/091893cea4.js" crossorigin="anonymous"></script>
    <script defer>
        var memberId = '@displayMemberId';
        console.log(memberId);

        document.addEventListener('DOMContentLoaded', () => {
            const ongoingTab = document.getElementById('ongoingTab');
            const completedTab = document.getElementById('completedTab');
            const cancelledTab = document.getElementById('cancelledTab');
            const tabContent = document.getElementById('tabContent');
            const pagination = document.getElementById('pagination');
            const pageSize = 5;
            let currentPage = 1;

            function setActiveTab(selectedTab) {
                document.querySelectorAll('.tab__link').forEach(tab => {
                    tab.classList.remove('active');
                });
                selectedTab.classList.add('active');
            }

            function formatOrderData(data, activeTab) {
                let htmlContent = '';
                if (data.orders && data.orders.length > 0) {
                    data.orders.forEach(order => {
                        let hotelImage = '';
                        let hotelName = '';
                        let checkInDate = '';
                        let checkOutDate = '';
                        let guestLastName = order.guestLastName || '無姓氏';
                        let guestFirstName = order.guestFirstName || '';
                        let guestEmail = order.guestEmail || '';

                        if (order.orderDetails && order.orderDetails.length > 0) {
                            const orderDetail = order.orderDetails[0];

                            hotelName = orderDetail.hotelName || '';
                            checkInDate = orderDetail.checkInDate ? new Date(orderDetail.checkInDate).toLocaleDateString() : '';
                            checkOutDate = orderDetail.checkOutDate ? new Date(orderDetail.checkOutDate).toLocaleDateString() : '';

                            if (orderDetail.hotelImages && orderDetail.hotelImages.length > 0) {
                                hotelImage = orderDetail.hotelImages[0];
                            }
                        }

                        const hotelImageUrl = getImageUrl(hotelImage);

                        const currentDate = new Date();
                        const stayCompleted = checkOutDate && new Date(checkOutDate) < currentDate;

                        let buttonText;
                        let buttonClass;
                        if (activeTab === 'completedTab' || activeTab === 'cancelledTab') {
                            buttonText = '再次訂購';
                            buttonClass = 'rebook-button';
                        } else {
                            buttonText = '需要取消';
                            buttonClass = 'cancel-button';
                        }

                        htmlContent += `
                            <div class="order-card" data-order-id="${order.orderId}">
                                <div class="order-card-header">
                                    <a href="/OrderManagement/OrderDetail?orderId=${order.orderId}" class="order-number" data-order-id="${order.orderId}">訂單編號: ${order.orderId}</a>
                                    <div class="order-date">預訂日期: ${new Date(order.createdAt).toLocaleDateString()}</div>
                                </div>
                                <div class="order-card-body">
                                    <div class="hotel-image">
                                      <img src="${hotelImageUrl}" alt="Hotel Image">
                                    </div>
                                    <div class="order-info">
                                        <h3>${hotelName}</h3>
                                        <p class="date-range">${checkInDate} - ${checkOutDate}</p>
                                        <p class="guest-info">${guestLastName} ${guestFirstName}</p>
                                        <p class="guest-info">${guestEmail}</p>
                                    </div>
                                    <div class="price">NT$${order.totalPrice}</div>
                                </div>
                                <div class="order-card-footer">
                                    <div class="order-status">已確認</div>
                                    <div class="${buttonClass}"><a href="#">${buttonText}</a></div>
                                </div>
                            </div>
                            `;
                    });
                } else {
                    htmlContent = '<p>暫無訂單數據可顯示。</p>';
                }
                return htmlContent;
            }

            function createPagination(totalOrders, pageSize, currentPage) {
                if (totalOrders <= pageSize) {
                    pagination.innerHTML = '';
                    return;
                }

                let totalPages = Math.ceil(totalOrders / pageSize);
                let paginationHTML = '';

                for (let i = 1; i <= totalPages; i++) {
                    paginationHTML += `<button class="page-btn ${i === currentPage ? 'active' : ''}" data-page="${i}">${i}</button>`;
                }

                pagination.innerHTML = paginationHTML;
            }

            function loadTabContent(status, activeTab) {
                const url = `https://localhost:7103/api/Orders/ByMemberAndStatus/${memberId}/${status}/${currentPage}/${pageSize}`;
                fetch(url)
                    .then(response => {
                        if (!response.ok) {
                            throw new Error(`Failed to load data, status code: ${response.status}`);
                        }
                        return response.json();
                    })
                    .then(data => {
                        tabContent.innerHTML = formatOrderData(data, activeTab);
                        if (data.orders && data.orders.length > 0) {
                            createPagination(data.totalOrders, pageSize, currentPage);
                        } else {
                            pagination.innerHTML = ''; // 清除分頁
                        }

                        // Add event listeners for order cards and order numbers
                        document.querySelectorAll('.order-card, .order-number').forEach(element => {
                            element.addEventListener('click', (event) => {
                                const orderId = event.currentTarget.getAttribute('data-order-id');
                                window.location.href = `/OrderManagement/OrderDetail?orderId=${orderId}`;
                            });
                        });
                    })
                    .catch(error => {
                        console.error('資料載入失敗:', error);
                        tabContent.innerHTML = `
                                <h3>目前沒有任何即將到來的預訂</h3>
                                <p>開始計劃下一次的旅行吧！</p>
                                <div class="buttons">
                                    <a href="#">找住宿？</a>
                                    <a href="#">找機票</a>
                                    <a href="#">找活動體驗</a>
                                </div>
                            `;
                        pagination.innerHTML = ''; // 清除分頁
                    });
            }

            function onPageClick(event) {
                const target = event.target;
                if (target.classList.contains('page-btn')) {
                    currentPage = parseInt(target.dataset.page);
                    const activeTab = document.querySelector('.tab__link.active').id;

                    let status;
                    if (activeTab === 'ongoingTab') {
                        status = 1;
                    } else if (activeTab === 'completedTab') {
                        status = 2;
                    } else if (activeTab === 'cancelledTab') {
                        status = 3;
                    }

                    loadTabContent(status, activeTab);
                }
            }

            function getImageUrl(imagePath) {
                if (imagePath == null) {
                    return null;
                }
                if (imagePath.startsWith('http') || imagePath.startsWith('https')) {
                    return imagePath;
                } else {
                    return window.location.origin + '/image/' + imagePath;
                }
            }

            ongoingTab.addEventListener('click', () => {
                setActiveTab(ongoingTab);
                currentPage = 1;
                loadTabContent(1, 'ongoingTab');
            });

            completedTab.addEventListener('click', () => {
                setActiveTab(completedTab);
                currentPage = 1;
                loadTabContent(2, 'completedTab');
            });

            cancelledTab.addEventListener('click', () => {
                setActiveTab(cancelledTab);
                currentPage = 1;
                loadTabContent(3, 'cancelledTab');
            });

            pagination.addEventListener('click', onPageClick);

            setActiveTab(ongoingTab);
            loadTabContent(1, 'ongoingTab');
        });
    </script>


</body>
</html>
