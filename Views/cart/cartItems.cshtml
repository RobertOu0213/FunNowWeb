@{
    ViewData["Title"] = "cartItems";
    // layout等大家
}

<main>
    <section class="cartLists">

        <div class="cartLists-title">
            <h3 class="cartLists-title-font">您的購物車<span id="allcartsCount"></span></h3>
        </div>

        <div id="cartContainer">
        </div>

        <div class="emptyCart" id="emptyCartContainer" style="display:none;">
            <div>
                <img src="~/ou/image/Cart_empty.png" alt="..." />
            </div>
            <div>
                <h5 class="fw-bold">目前購物車是空的</h5>
            </div>
        </div>

    </section>


    <section class="totalPrice">
        @* 有價格的 *@
        <div class="cartCheck-container p-2 border-1 rounded border" id="hasprice" style="display: none;">
            <div class="cartCheck-container-div1 d-flex justify-content-between">
                <div>總價</div>
                <div class="text-danger fw-bolder fs-5">NT$ 0</div>
            </div>
            <div class="cartCheck-container-div2">
                <div><span>0項</span>（含稅及其他費用）</div>
            </div>
            <div class="d-grid gap-2 mt-3">
                <button class="btn btn-primary rounded-pill" id="GotoPayment" type="button">繼續預訂</button>
            </div>
        </div>

        @*  沒價格的(一開始畫面會呈現) *@
        <div class="cartCheck-container p-2 border-1 rounded border" id="noprice">
            <div class="cartCheck-container-div1 d-flex justify-content-between">
                <div>總價</div>
            </div>
            <div class="cartCheck-container-div2">
                <div>尚未選擇</div>
            </div>
            <div class="d-grid gap-2 mt-3">
                <button class="btn btn-light rounded-pill" type="button">繼續預定</button>
            </div>
        </div>
    </section>


</main>

@section Styles {
    <link href="~/ou/css/cartItems.css" rel="stylesheet" />
}
@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" crossorigin="anonymous"></script>
    <script src="https://kit.fontawesome.com/e5eef540c2.js" crossorigin="anonymous"></script>


    <script>
        const MemberId = @Model;

        $(document).ready(function () {

            fetchCartItems(MemberId);

            $(document).on('click', '.trash-can-btn', async function () {
                const orderDetailID = $(this).data('id');
                const confirmed = confirm(`您確定要從購物車中移除此項目嗎？`);
                if (confirmed) {
                    try {
                        const response = await fetch(`https://localhost:7103/api/Cart/${orderDetailID}`, {
                            method: 'DELETE',
                            headers: {
                                'Content-Type': 'application/json'
                            }
                        });

                        if (!response.ok) {
                            throw new Error(response.statusText);
                        }
                        const checkedItems = getCheckedItems();
                        fetchCartItems(MemberId, checkedItems);
                    } catch (error) {
                        console.error(error);
                    }
                }
            });


            $(document).on('click', '.cartRoom-bookingInfo', function () {
                const checkbox = $(this).find('input[type="checkbox"]');
                checkbox.prop('checked', !checkbox.prop('checked'));

                updateTotalPriceAndItems();
            });

            //前往PaymentPage
            $('#GotoPayment').on('click', async function () {
                const checkedItems = getCheckedItems();
                try {
                    const response = await fetch('/Cart/PreparePayment', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify(checkedItems)
                    });

                    if (!response.ok) {
                        throw new Error(response.statusText);
                    }

                    const data = await response.json();
                    if (data.success) {
                        window.location.href = data.redirectUrl;
                    }

                } catch (error) {
                    console.error(error);
                }
            });




        });

        async function fetchCartItems(memberId, checkedItems = []) {
            try {
                const res = await fetch(`https://localhost:7103/api/Cart/${memberId}`);
                if (!res.ok) {
                    throw new Error(res.statusText);
                }
                const data = await res.json();
                if (data.success) {
                    const orderDetailDtos = data.orderDetailDtos;

                    await Promise.all(orderDetailDtos.map(async (item) => {
                        const ratingRes = await fetch(`https://localhost:7103/api/Comment/AverageRatingText/${item.hotelID}`);
                        if (!ratingRes.ok) {
                            throw new Error(ratingRes.statusText);
                        }
                        const ratingData = await ratingRes.json();
                        // console.log(item);
                        item.averageScore = Math.round(ratingData.averageScore);
                        item.ratingText = ratingData.ratingText;
                    }));



                    $("#allcartsCount").text(`(${data.orderDetailDtos.length})`);
                    renderCartItems(data.orderDetailDtos, checkedItems);
                }
            } catch (err) {
                console.log(err);
            }
        }

        function renderCartItems(orderDetailDtos, checkedItems) {

            if (orderDetailDtos.length === 0) {
                $('#emptyCartContainer').css('display', 'block');
            } else {
                $('#emptyCartContainer').css('display', 'none');
            }

            let cartRoomStr = "";
            orderDetailDtos.forEach(item => {
                let stars = "";
                for (let i = 0; i < item.levelStar; i++) {
                    stars += `<i class="fa-solid fa-star"></i> `;
                }

                const days = getDaysBetweenDates(item.checkInDate, item.checkOutDate);
                const totalPrice = days * item.roomPrice;
                const checkInDate = formatDate(item.checkInDate);
                const checkOutDate = formatDate(item.checkOutDate);
                const imageUrl = getImageUrl(item.roomImage);

                cartRoomStr += `
                                        <div class="cartRoom">
                                            <div class="cartRoom-basicInfo">
                                                <div class="cartRoom-basicInfo-image">
                                                    <img class="cartRoom-basicInfo-image-img" src="${imageUrl}" alt="...">
                                                </div>

                                                <div class="cartRoom-basicInfo-content">
                                                    <span>${item.hotelName}</span>
                                                    <div class="cartRoom-basicInfo-content-div2">
                                                        <div class="cartRoom-basicInfo-content-icon-star">${stars}</div>
                                                        <i class="fa-solid fa-earth-americas"></i> <span>${item.cityName}</span>
                                                    </div>
                                                    <div class="cartRoom-basicInfo-content-div3">
                                                        <div class="cartRoom-basicInfo-content-icon">
                                                         <span class="cartRoom-basicInfo-content-icon-number averageScore">${item.averageScore}</span>
                                                        </div>
                                                                 <span class="cartRoom-basicInfo-content-icon-comment ratingText">${item.ratingText}</span>
                                                        <span class="cartRoom-basicInfo-content-icon-count">${item.allCommentsCount} 篇評論</span>
                                                    </div>
                                                </div>
                                                <div class="trash-can">
                                                    <button class="trash-can-btn" data-id="${item.orderDetailID}"><i class="fa-solid fa-lg fa-trash-can"></i></button>
                                                </div>
                                            </div>
                                                <div class="cartRoom-bookingInfo" data-price="${totalPrice}" data-id="${item.orderDetailID}">
                                                <div class="cartRoom-bookingInfo-div1">
                                                    <label for="">
                                                        <input type="checkbox" name="" ${checkedItems.includes(item.orderDetailID) ? 'checked' : ''}>
                                                        <span>1 x ${item.roomType}</span>
                                                    </label>
                                                </div>
                                                <div class="cartRoom-bookingInfo-div2">
                                                    <span>${checkInDate}</span><span>-</span><span>${checkOutDate}</span>
                                                </div>
                                                <div class="cartRoom-bookingInfo-div3">
                                                    <i class="fa-solid fa-users"></i>
                                                    <span>住客人數 : </span><span>${item.maximumOccupancy}位大人</span>
                                                </div>
                                                <div class="cartRoom-bookingInfo-div4">
                                                    <span>NT $</span> <span>${totalPrice}</span>
                                                </div>
                                                <div class="cartRoom-bookingInfo-div5">
                                                    包含稅金及附加費用
                                                </div>
                                            </div>
                                        </div>
                                    `;
            });

            $("#cartContainer").html(cartRoomStr);
            updateTotalPriceAndItems();
        }

        function getCheckedItems() {
            let checkedItems = [];
            $('.cartRoom-bookingInfo input[type="checkbox"]:checked').each(function () {
                checkedItems.push($(this).closest('.cartRoom-bookingInfo').data('id'));
            });
            return checkedItems;
        }

        function getDaysBetweenDates(checkInDate, checkOutDate) {
            const checkIn = new Date(checkInDate);
            const checkOut = new Date(checkOutDate);
            const timeDifference = (checkOut - checkIn) / (1000 * 3600 * 24);
            return Math.floor(timeDifference);
        }

        function formatDate(dateString) {
            const options = { year: 'numeric', month: 'long', day: 'numeric' };
            const date = new Date(dateString);
            return date.toLocaleDateString('zh-CN', options);
        }

        function getImageUrl(imagePath) {
            if (imagePath == null) {
                return null;
            }
            if (imagePath.startsWith('http') || imagePath.startsWith('https')) {
                return imagePath;
            } else {
                return window.location.origin + '/image/' + imagePath;
            }
        }

        function updateTotalPriceAndItems() {
            let totalItems = 0;
            let totalPrice = 0;

            $('.cartRoom-bookingInfo input[type="checkbox"]:checked').each(function () {
                totalItems++;
                totalPrice += parseFloat($(this).closest('.cartRoom-bookingInfo').data('price'));
            });

            if (totalItems > 0) {

                $('#noprice').css('display', 'none');
                $('#hasprice').css('display', 'block');

                $('#hasprice .cartCheck-container-div1 .text-danger').text(`NT$ ${totalPrice.toLocaleString()}`);
                $('#hasprice .cartCheck-container-div2 span').text(`${totalItems}項`);
            } else {

                $('#hasprice').css('display', 'none');
                $('#noprice').css('display', 'block');

                $('.totalPrice .inactive .cartCheck-container-div1 .text-danger').text('NT$ 0');
                $('.totalPrice .inactive .cartCheck-container-div2 span').text('0項');
            }



        }



    </script>


}